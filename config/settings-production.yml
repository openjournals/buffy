buffy:
  env:
    bot_github_user: <%= ENV['BUFFY_BOT_GH_USER'] %>
    gh_access_token: <%= ENV['BUFFY_GH_ACCESS_TOKEN'] %>
    gh_secret_token: <%= ENV['BUFFY_GH_SECRET_TOKEN'] %>
    reviewers_host_url: <%= ENV['REVIEWERS_HOST_URL'] %>
    reviewers_api_token: <%= ENV['REVIEWERS_API_TOKEN'] %>
  teams:
    editors: openjournals/joss-editors
    eics: openjournals/joss-eics
  responders:
    help:
      - commands:
          help_command: commands
      - help:
          help_command: help
          hidden: true
    whedon:
    thanks:
      hidden: true
    openjournals_reviewers_start_review:
      if:
        title: "^\\[REVIEW\\]:"
    openjournals_reviewers_end_review:
      if:
        title: "^\\[REVIEW\\]:"
    openjournals_reviewers_list:
      only: editors
      if:
        role_assigned: editor
        reject_msg: "Can't add reviewers: There is no editor assigned yet"
      add_as_assignee: true
    list_team_members:
      command: list editors
      team_id: openjournals/joss-editors
      heading: List of JOSS editors
      description: "Get a list of all editors's GitHub handles"
    assign_editor:
      only: editors
      external_call:
        url: "https://joss.theoj.org/papers/api_assign_editor"
        method: post
        query_params:
          secret: <%= ENV['JOSS_SECRET'] %>
        mapping:
          id: issue_id
          editor: editor
        silent: true
    remove_editor:
      only: editors
    reminders:
      only: editors
      authorized_roles_in_issue:
        - reviewers-list
    reviewer_checklist_comment:
      if:
        title: "^\\[REVIEW\\]:"
        reject_msg: Checklists can only be created once the review has started in the review issue
      template_file: reviewer_checklist.md
      data_from_issue:
        - target-repository
        - author-handle
    set_value:
      - version:
          only: editors
          sample_value: "v1.0.0"
      - branch:
          sample_value: "joss-paper"
      - target-repository:
          only: editors
          sample_value: "https://github.com/organization/repo"
          aliased_as: repository
          external_call:
            url: "https://joss.theoj.org/papers/api_update_paper_info"
            method: post
            query_params:
              secret: <%= ENV['JOSS_SECRET'] %>
            mapping:
              id: issue_id
              repository_url: new_value
            silent: true
    openjournals_set_archive:
      only: editors
    ping_track_eics:
      only: editors
    external_service:
      - reject:
          only: eics
          command: reject
          description: "Reject paper"
          url: "https://joss.theoj.org/papers/api_reject"
          query_params:
            secret: <%= ENV['JOSS_SECRET'] %>
          mapping:
            id: issue_id
          add_labels:
            - rejected
          success_msg: "Paper rejected."
          error_msg: "There was a problem rejecting the paper."
          close: true
      - withdraw:
          only: eics
          command: withdraw
          description: "Withdraw paper"
          url: "https://joss.theoj.org/papers/api_withdraw"
          query_params:
            secret: <%= ENV['JOSS_SECRET'] %>
          mapping:
            id: issue_id
          add_labels:
            - withdrawn
          success_msg: "Paper withdrawn."
          error_msg: "There was a problem withdrawing the paper."
          close: true
      - invite_editor:
          only: eics
          command: "invite @(.*) as editor"
          description: "Invite an editor to edit a submission (sending them an email)"
          url: "https://joss.theoj.org/papers/api_editor_invite"
          query_params:
            secret: <%= ENV['JOSS_SECRET'] %>
          mapping:
            id: issue_id
            editor: match_data_1
          success_msg: Invitation to edit this submission sent!
          error_msg: "There was a problem inviting the user to edit this submission."
    github_action:
      - checks:
          command: check repository
          workflow_repo: openjournals/joss-papers
          workflow_name: checks.yml
          workflow_ref: master
          description: "Run checks and provide information on the repository and the paper file"
          data_from_issue:
            - branch
            - target-repository
            - issue_id
          mapping:
            repository_url: target-repository
      - references:
          command: check references
          workflow_repo: openjournals/joss-papers
          workflow_name: references.yml
          workflow_ref: master
          description: "Check the references of the paper for missing DOIs"
          data_from_issue:
            - branch
            - target-repository
            - issue_id
          mapping:
            repository_url: target-repository
      - draft_paper:
          command: generate pdf
          workflow_repo: openjournals/joss-papers
          workflow_name: draft-paper.yml
          workflow_ref: master
          description: Generates the pdf paper
          data_from_issue:
            - branch
            - target-repository
            - issue_id
            - issue_title
          mapping:
            repository_url: target-repository
      - recommend_acceptance:
          if:
            value_matches:
              archive: "^((?!Pending).)*$"
            reject_msg: "Paper is not ready for acceptance yet, the archive is missing"
          only: editors
          command: recommend-accept
          workflow_repo: openjournals/joss-papers
          workflow_name: recommend-acceptance.yml
          workflow_ref: master
          description: Recommends the submission for acceptance
          message: "```\nAttempting dry run of processing paper acceptance...\n```"
          inputs:
            add_labels: recommend-accept
          data_from_issue:
            - branch
            - target-repository
            - issue_id
          mapping:
            repository_url: target-repository
          run_responder:
            responder_key: github_action
            responder_name: references
      - accept:
          if:
            value_matches:
              archive: "^((?!Pending).)*$"
            reject_msg: "Paper is not ready for acceptance yet, the archive is missing"
          only: eics
          command: accept
          workflow_repo: openjournals/joss-papers
          workflow_name: accept.yml
          workflow_ref: master
          description: Accept and publish the paper
          message: "```\nDoing it live! Attempting automated processing of paper acceptance...\n```"
          inputs:
            add_labels: "accepted,published"
          data_from_issue:
            - branch
            - target-repository
            - issue_id
          mapping:
            repository_url: target-repository
      - accept_ignoring_errors:
          if:
            value_matches:
              archive: "^((?!Pending).)*$"
            reject_msg: "Paper is not ready for acceptance yet, the archive is missing"
          only: eics
          hidden: true
          command: accept ignoring errors
          workflow_repo: openjournals/joss-papers
          workflow_name: accept.yml
          workflow_ref: master
          description: Accept and publish the paper
          message: "```\nDoing it live! Attempting automated processing of paper acceptance (ignoring metadata errors)...\n```"
          inputs:
            add_labels: "accepted,published"
            validation_mode: "ignore-errors"
          data_from_issue:
            - branch
            - target-repository
            - issue_id
          mapping:
            repository_url: target-repository
      - reaccept:
          if:
            value_matches:
              archive: "^((?!Pending).)*$"
            reject_msg: "Can't rebuild paper, there's no value for archive"
          only: eics
          command: reaccept
          workflow_repo: openjournals/joss-papers
          workflow_name: reaccept.yml
          workflow_ref: master
          description: Update data on an accepted/published paper
          message: "```\nRebuilding paper!\n```"
          data_from_issue:
            - branch
            - target-repository
            - issue_id
          mapping:
            repository_url: target-repository
      - preprint:
          command: generate preprint
          workflow_repo: openjournals/joss-papers
          workflow_name: preprint.yml
          workflow_ref: master
          description: Generates a LaTeX preprint file
          data_from_issue:
            - branch
            - target-repository
            - issue_id
          mapping:
            repository_url: target-repository
    basic_command:
      - query_scope:
          only: editors
          command: query scope
          description: Flag submission with questionable scope
          add_labels:
            - query-scope
          message: "Submission flagged for editorial review."
      - list_reviewers:
          command: list reviewers
          description: Get a link to the complete list of reviewers
          template_file: reviewers_list.md
    update_comment:
      - editor_post-review_checklist:
          only: editors
          if:
            title: "^\\[REVIEW\\]:"
            reject_msg: "This is not a review issue"
          command: create post-review checklist
          description: Creates a post-review checklist with editor and authors tasks
          template_file: post-review_checklist.md
    welcome:
      - pre_review_issue:
          if:
            title: "^\\[PRE REVIEW\\]:"
          template_file: pre-review_welcome.md
          run_responder:
            - checks:
                responder_key: github_action
                responder_name: checks
            - references:
                responder_key: github_action
                responder_name: references
            - draft-paper:
                responder_key: github_action
                responder_name: draft_paper
      - review_issue:
          if:
            title: "^\\[REVIEW\\]:"
          template_file: review_welcome.md
          run_responder:
            - checks:
                responder_key: github_action
                responder_name: checks
            - references:
                responder_key: github_action
                responder_name: references
            - draft-paper:
                responder_key: github_action
                responder_name: draft_paper
      - close_other_issues:
          if:
            title: "^(?!\\[REVIEW\\]:|\\[PRE REVIEW\\]:)"
          template_file: close.md
          close: true
    goodbye:
      if:
        labels: accepted
      template_file: goodbye.md
    external_start_review:
      only: editors
      external_call:
        url: "https://joss.theoj.org/papers/api_start_review"
        query_params:
          secret: <%= ENV['JOSS_SECRET'] %>
        data_from_issue:
          - branch
        mapping:
          id: issue_id
          editor: editor_login
          reviewers: reviewers_logins
        silent: true
        template_file: "review_started.md"
        close: true
