{"name":"SOQL","scopeName":"source.soql","patterns":[{"include":"#soqlHeaderComment"},{"include":"#soql-query-expression"}],"repository":{"annotation-declaration":{"begin":"([@][_[:alpha:]]+)\\b","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"include":"#expression"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#statement"}],"beginCaptures":{"1":{"name":"storage.type.annotation.apex"}}},"argument-list":{"begin":"\\(","end":"\\)","patterns":[{"include":"#named-argument"},{"include":"#expression"},{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},"array-creation-expression":{"begin":"(?x)\n\\b(new)\\b\\s*\n(?\u003ctype_name\u003e\n  (?:\n    (?:\n      (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n      (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n        \\g\u003cidentifier\u003e\\s*\n        (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n      )\n      (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n    )\n    (?:\\s*\\?\\s*)? # nullable suffix?\n    (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n  )\n)?\\s*\n(?=\\[)","end":"(?\u003c=\\])","patterns":[{"include":"#bracketed-argument-list"}],"beginCaptures":{"1":{"name":"keyword.control.new.apex"},"2":{"patterns":[{"include":"#support-type"},{"include":"#type"}]}}},"block":{"begin":"\\{","end":"\\}","patterns":[{"include":"#statement"}],"beginCaptures":{"0":{"name":"punctuation.curlybrace.open.apex"}},"endCaptures":{"0":{"name":"punctuation.curlybrace.close.apex"}}},"boolean-literal":{"patterns":[{"name":"constant.language.boolean.true.apex","match":"(?\u003c!\\.)\\btrue\\b"},{"name":"constant.language.boolean.false.apex","match":"(?\u003c!\\.)\\bfalse\\b"}]},"bracketed-argument-list":{"begin":"\\[","end":"\\]","patterns":[{"include":"#soql-query-expression"},{"include":"#named-argument"},{"include":"#expression"},{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.squarebracket.open.apex"}},"endCaptures":{"0":{"name":"punctuation.squarebracket.close.apex"}}},"break-or-continue-statement":{"match":"(?\u003c!\\.)\\b(?:(break)|(continue))\\b","captures":{"1":{"name":"keyword.control.flow.break.apex"},"2":{"name":"keyword.control.flow.continue.apex"}}},"cast-expression":{"match":"(?x)\n(\\()\\s*\n(?\u003ctype_name\u003e\n  (?:\n    (?:\n      (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n      (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n        \\g\u003cidentifier\u003e\\s*\n        (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n      )\n      (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n    )\n    (?:\\s*\\?\\s*)? # nullable suffix?\n    (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n  )\n)\\s*\n(\\))(?=\\s*@?[_[:alnum:]\\(])","captures":{"1":{"name":"punctuation.parenthesis.open.apex"},"2":{"patterns":[{"include":"#support-type"},{"include":"#type"}]},"6":{"name":"punctuation.parenthesis.close.apex"}}},"catch-clause":{"begin":"(?\u003c!\\.)\\b(catch)\\b","end":"(?\u003c=\\})","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"match":"(?x)\n(?\u003ctype_name\u003e\n  (?:\n    (?:\n      (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n      (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n        \\g\u003cidentifier\u003e\\s*\n        (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n      )\n      (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n    )\n    (?:\\s*\\?\\s*)? # nullable suffix?\n    (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n  )\n)\\s*\n(?:(\\g\u003cidentifier\u003e)\\b)?","captures":{"1":{"patterns":[{"include":"#support-type"},{"include":"#type"}]},"5":{"name":"entity.name.variable.local.apex"}}}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#comment"},{"include":"#block"}],"beginCaptures":{"1":{"name":"keyword.control.try.catch.apex"}}},"class-declaration":{"begin":"(?=\\bclass\\b)","end":"(?\u003c=\\})","patterns":[{"begin":"(?x)\n\\b(class)\\b\\s+\n(@?[_[:alpha:]][_[:alnum:]]*)\\s*","end":"(?=\\{)","patterns":[{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#type-parameter-list"},{"include":"#extends-class"},{"include":"#implements-class"}],"beginCaptures":{"1":{"name":"keyword.other.class.apex"},"2":{"name":"entity.name.type.class.apex"}}},{"begin":"\\{","end":"\\}","patterns":[{"include":"#class-or-trigger-members"}],"beginCaptures":{"0":{"name":"punctuation.curlybrace.open.apex"}},"endCaptures":{"0":{"name":"punctuation.curlybrace.close.apex"}}},{"include":"#javadoc-comment"},{"include":"#comment"}]},"class-or-trigger-members":{"patterns":[{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#storage-modifier"},{"include":"#sharing-modifier"},{"include":"#type-declarations"},{"include":"#field-declaration"},{"include":"#property-declaration"},{"include":"#indexer-declaration"},{"include":"#variable-initializer"},{"include":"#constructor-declaration"},{"include":"#method-declaration"},{"include":"#punctuation-semicolon"}]},"colon-expression":{"name":"keyword.operator.conditional.colon.apex","match":":"},"comment":{"patterns":[{"name":"comment.block.apex","begin":"/\\*(\\*)?","end":"\\*/","beginCaptures":{"0":{"name":"punctuation.definition.comment.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.comment.apex"}}},{"begin":"(^\\s+)?(?=//)","end":"(?=$)","patterns":[{"name":"comment.block.documentation.apex","begin":"(?\u003c!/)///(?!/)","end":"(?=$)","patterns":[{"include":"#xml-doc-comment"}],"beginCaptures":{"0":{"name":"punctuation.definition.comment.apex"}}},{"name":"comment.line.double-slash.apex","begin":"(?\u003c!/)//(?:(?!/)|(?=//))","end":"(?=$)","beginCaptures":{"0":{"name":"punctuation.definition.comment.apex"}}}],"beginCaptures":{"1":{"name":"punctuation.whitespace.comment.leading.apex"}}}]},"conditional-operator":{"begin":"(?\u003c!\\?)\\?(?!\\?|\\.|\\[)","end":":","patterns":[{"include":"#expression"}],"beginCaptures":{"0":{"name":"keyword.operator.conditional.question-mark.apex"}},"endCaptures":{"0":{"name":"keyword.operator.conditional.colon.apex"}}},"constructor-declaration":{"begin":"(?=@?[_[:alpha:]][_[:alnum:]]*\\s*\\()","end":"(?\u003c=\\})|(?=;)","patterns":[{"match":"(@?[_[:alpha:]][_[:alnum:]]*)\\b","captures":{"1":{"name":"entity.name.function.apex"}}},{"begin":"(:)","end":"(?=\\{|=\u003e)","patterns":[{"include":"#constructor-initializer"}],"beginCaptures":{"1":{"name":"punctuation.separator.colon.apex"}}},{"include":"#parenthesized-parameter-list"},{"include":"#comment"},{"include":"#expression-body"},{"include":"#block"}]},"constructor-initializer":{"begin":"\\b(?:(this))\\b\\s*(?=\\()","end":"(?\u003c=\\))","patterns":[{"include":"#argument-list"}],"beginCaptures":{"1":{"name":"keyword.other.this.apex"}}},"date-literal-with-params":{"match":"\\b((LAST_N_DAYS|NEXT_N_DAYS|NEXT_N_WEEKS|LAST_N_WEEKS|NEXT_N_MONTHS|LAST_N_MONTHS|NEXT_N_QUARTERS|LAST_N_QUARTERS|NEXT_N_YEARS|LAST_N_YEARS|NEXT_N_FISCAL_QUARTERS|LAST_N_FISCAL_QUARTERS|NEXT_N_FISCAL_YEARS|LAST_N_FISCAL_YEARS)\\s*\\:\\d+)\\b","captures":{"1":{"name":"keyword.operator.query.date.apex"}}},"date-literals":{"match":"\\b(YESTERDAY|TODAY|TOMORROW|LAST_WEEK|THIS_WEEK|NEXT_WEEK|LAST_MONTH|THIS_MONTH|NEXT_MONTH|LAST_90_DAYS|NEXT_90_DAYS|THIS_QUARTER|LAST_QUARTER|NEXT_QUARTER|THIS_YEAR|LAST_YEAR|NEXT_YEAR|THIS_FISCAL_QUARTER|LAST_FISCAL_QUARTER|NEXT_FISCAL_QUARTER|THIS_FISCAL_YEAR|LAST_FISCAL_YEAR|NEXT_FISCAL_YEAR)\\b\\s*","captures":{"1":{"name":"keyword.operator.query.date.apex"}}},"declarations":{"patterns":[{"include":"#type-declarations"},{"include":"#punctuation-semicolon"}]},"directives":{"patterns":[{"include":"#punctuation-semicolon"}]},"do-statement":{"begin":"(?\u003c!\\.)\\b(do)\\b","end":"(?=;|})","patterns":[{"include":"#statement"}],"beginCaptures":{"1":{"name":"keyword.control.loop.do.apex"}}},"element-access-expression":{"begin":"(?x)\n(?:(\\??\\.)\\s*)?                       # safe navigator or accessor\n(?:(@?[_[:alpha:]][_[:alnum:]]*)\\s*)? # property name\n(?:(\\?)\\s*)?                          # null-conditional operator?\n(?=\\[)                                # open bracket of argument list","end":"(?\u003c=\\])(?!\\s*\\[)","patterns":[{"include":"#bracketed-argument-list"}],"beginCaptures":{"1":{"patterns":[{"include":"#punctuation-accessor"},{"include":"#operator-safe-navigation"}]},"2":{"name":"variable.other.object.property.apex"},"3":{"name":"keyword.operator.null-conditional.apex"}}},"else-part":{"begin":"(?\u003c!\\.)\\b(else)\\b","end":"(?\u003c=\\})|(?=;)","patterns":[{"include":"#statement"}],"beginCaptures":{"1":{"name":"keyword.control.conditional.else.apex"}}},"enum-declaration":{"begin":"(?=\\benum\\b)","end":"(?\u003c=\\})","patterns":[{"begin":"(?=enum)","end":"(?=\\{)","patterns":[{"include":"#javadoc-comment"},{"include":"#comment"},{"match":"(enum)\\s+(@?[_[:alpha:]][_[:alnum:]]*)","captures":{"1":{"name":"keyword.other.enum.apex"},"2":{"name":"entity.name.type.enum.apex"}}}]},{"begin":"\\{","end":"\\}","patterns":[{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#punctuation-comma"},{"begin":"@?[_[:alpha:]][_[:alnum:]]*","end":"(?=(,|\\}))","patterns":[{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#variable-initializer"}],"beginCaptures":{"0":{"name":"entity.name.variable.enum-member.apex"}}}],"beginCaptures":{"0":{"name":"punctuation.curlybrace.open.apex"}},"endCaptures":{"0":{"name":"punctuation.curlybrace.close.apex"}}},{"include":"#javadoc-comment"},{"include":"#comment"}]},"expression":{"patterns":[{"include":"#comment"},{"include":"#merge-expression"},{"include":"#support-expression"},{"include":"#throw-expression"},{"include":"#this-expression"},{"include":"#trigger-context-declaration"},{"include":"#conditional-operator"},{"include":"#expression-operators"},{"include":"#soql-query-expression"},{"include":"#object-creation-expression"},{"include":"#array-creation-expression"},{"include":"#invocation-expression"},{"include":"#member-access-expression"},{"include":"#element-access-expression"},{"include":"#cast-expression"},{"include":"#literal"},{"include":"#parenthesized-expression"},{"include":"#initializer-expression"},{"include":"#identifier"}]},"expression-body":{"begin":"=\u003e","end":"(?=[,\\);}])","patterns":[{"include":"#expression"}],"beginCaptures":{"0":{"name":"keyword.operator.arrow.apex"}}},"expression-operators":{"patterns":[{"name":"keyword.operator.assignment.compound.apex","match":"\\*=|/=|%=|\\+=|-="},{"name":"keyword.operator.assignment.compound.bitwise.apex","match":"\\\u0026=|\\^=|\u003c\u003c=|\u003e\u003e=|\\|="},{"name":"keyword.operator.bitwise.shift.apex","match":"\u003c\u003c|\u003e\u003e"},{"name":"keyword.operator.comparison.apex","match":"==|!="},{"name":"keyword.operator.relational.apex","match":"\u003c=|\u003e=|\u003c|\u003e"},{"name":"keyword.operator.logical.apex","match":"\\!|\u0026\u0026|\\|\\|"},{"name":"keyword.operator.bitwise.apex","match":"\\\u0026|~|\\^|\\|"},{"name":"keyword.operator.assignment.apex","match":"\\="},{"name":"keyword.operator.decrement.apex","match":"--"},{"name":"keyword.operator.increment.apex","match":"\\+\\+"},{"name":"keyword.operator.arithmetic.apex","match":"%|\\*|/|-|\\+"}]},"extends-class":{"begin":"(extends)\\b\\s+([_[:alpha:]][_[:alnum:]]*)","end":"(?={|implements)","beginCaptures":{"1":{"name":"keyword.other.extends.apex"},"2":{"name":"entity.name.type.extends.apex"}}},"field-declaration":{"begin":"(?x)\n(?\u003ctype_name\u003e\n  (?:\n    (?:\n      (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n      (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n        \\g\u003cidentifier\u003e\\s*\n        (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n      )\n      (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n    )\n    (?:\\s*\\?\\s*)? # nullable suffix?\n    (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n  )\n)\\s+\n(\\g\u003cidentifier\u003e)\\s* # first field name\n(?!=\u003e|==)(?=,|;|=|$)","end":"(?=;)","patterns":[{"name":"entity.name.variable.field.apex","match":"@?[_[:alpha:]][_[:alnum:]]*"},{"include":"#punctuation-comma"},{"include":"#comment"},{"include":"#variable-initializer"},{"include":"#class-or-trigger-members"}],"beginCaptures":{"1":{"patterns":[{"include":"#support-type"},{"include":"#type"}]},"5":{"name":"entity.name.variable.field.apex"}}},"finally-clause":{"begin":"(?\u003c!\\.)\\b(finally)\\b","end":"(?\u003c=\\})","patterns":[{"include":"#comment"},{"include":"#block"}],"beginCaptures":{"1":{"name":"keyword.control.try.finally.apex"}}},"for-apex-syntax":{"match":"([_.[:alpha:]][_.[:alnum:]]+)\\s+([_.[:alpha:]][_.[:alnum:]]*)\\s*(\\:)","captures":{"1":{"patterns":[{"include":"#support-type"},{"include":"#type"}]},"2":{"name":"entity.name.variable.local.apex"},"3":{"name":"keyword.operator.iterator.colon.apex"}}},"for-statement":{"begin":"(?\u003c!\\.)\\b(for)\\b\\s*(?=\\()","end":"(?\u003c=\\})|(?=;)","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"include":"#for-apex-syntax"},{"include":"#local-variable-declaration"},{"include":"#expression"},{"include":"#punctuation-comma"},{"include":"#punctuation-semicolon"},{"include":"#colon-expression"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#statement"}],"beginCaptures":{"1":{"name":"keyword.control.loop.for.apex"}}},"from-clause":{"match":"(FROM)\\b\\s*([_\\.[:alnum:]]+\\b)?","captures":{"1":{"name":"keyword.operator.query.from.apex"},"2":{"name":"storage.type.apex"}}},"goto-statement":{"begin":"(?\u003c!\\.)\\b(goto)\\b","end":"(?=;)","patterns":[{"begin":"\\b(case)\\b","end":"(?=;)","patterns":[{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.control.case.apex"}}},{"match":"\\b(default)\\b","captures":{"1":{"name":"keyword.control.default.apex"}}},{"name":"entity.name.label.apex","match":"@?[_[:alpha:]][_[:alnum:]]*"}],"beginCaptures":{"1":{"name":"keyword.control.goto.apex"}}},"identifier":{"name":"variable.other.readwrite.apex","match":"@?[_[:alpha:]][_[:alnum:]]*"},"if-statement":{"begin":"(?\u003c!\\.)\\b(if)\\b\\s*(?=\\()","end":"(?\u003c=\\})|(?=;)","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"include":"#expression"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#statement"}],"beginCaptures":{"1":{"name":"keyword.control.conditional.if.apex"}}},"implements-class":{"begin":"(implements)\\b\\s+([_[:alpha:]][_[:alnum:]]*)","end":"(?={|extends)","beginCaptures":{"1":{"name":"keyword.other.implements.apex"},"2":{"name":"entity.name.type.implements.apex"}}},"indexer-declaration":{"begin":"(?x)\n(?\u003creturn_type\u003e\n  (?\u003ctype_name\u003e\n    (?:\n      (?:ref\\s+)?   # ref return\n      (?:\n        (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n        (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n          \\g\u003cidentifier\u003e\\s*\n          (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n        )\n        (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n      )\n      (?:\\s*\\?\\s*)? # nullable suffix?\n      (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n    )\n  )\\s+\n)\n(?\u003cinterface_name\u003e\\g\u003ctype_name\u003e\\s*\\.\\s*)?\n(?\u003cindexer_name\u003ethis)\\s*\n(?=\\[)","end":"(?\u003c=\\})|(?=;)","patterns":[{"include":"#comment"},{"include":"#property-accessors"},{"include":"#expression-body"},{"include":"#variable-initializer"}],"beginCaptures":{"1":{"patterns":[{"include":"#type"}]},"6":{"patterns":[{"include":"#type"},{"include":"#punctuation-accessor"}]},"7":{"name":"keyword.other.this.apex"}}},"initializer-expression":{"begin":"\\{","end":"\\}","patterns":[{"include":"#expression"},{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.curlybrace.open.apex"}},"endCaptures":{"0":{"name":"punctuation.curlybrace.close.apex"}}},"interface-declaration":{"begin":"(?=\\binterface\\b)","end":"(?\u003c=\\})","patterns":[{"begin":"(?x)\n(interface)\\b\\s+\n(@?[_[:alpha:]][_[:alnum:]]*)","end":"(?=\\{)","patterns":[{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#type-parameter-list"},{"include":"#extends-class"}],"beginCaptures":{"1":{"name":"keyword.other.interface.apex"},"2":{"name":"entity.name.type.interface.apex"}}},{"begin":"\\{","end":"\\}","patterns":[{"include":"#interface-members"}],"beginCaptures":{"0":{"name":"punctuation.curlybrace.open.apex"}},"endCaptures":{"0":{"name":"punctuation.curlybrace.close.apex"}}},{"include":"#javadoc-comment"},{"include":"#comment"}]},"interface-members":{"patterns":[{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#property-declaration"},{"include":"#indexer-declaration"},{"include":"#method-declaration"},{"include":"#punctuation-semicolon"}]},"invocation-expression":{"begin":"(?x)\n(?:(\\??\\.)\\s*)?                                  # safe navigator or accessor\n(@?[_[:alpha:]][_[:alnum:]]*)\\s*                 # method name\n(?\u003ctype_args\u003e\\s*\u003c([^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\\s* # type arguments\n(?=\\()                                           # open paren of argument list","end":"(?\u003c=\\))","patterns":[{"include":"#argument-list"}],"beginCaptures":{"1":{"patterns":[{"include":"#punctuation-accessor"},{"include":"#operator-safe-navigation"}]},"2":{"name":"entity.name.function.apex"},"3":{"patterns":[{"include":"#type-arguments"}]}}},"javadoc-comment":{"patterns":[{"name":"comment.block.javadoc.apex","begin":"^\\s*(/\\*\\*)(?!/)","end":"\\*/","patterns":[{"name":"keyword.other.documentation.javadoc.apex","match":"@(deprecated|author|return|see|serial|since|version|usage|name|link)\\b"},{"match":"(@param)\\s+(\\S+)","captures":{"1":{"name":"keyword.other.documentation.javadoc.apex"},"2":{"name":"entity.name.variable.parameter.apex"}}},{"match":"(@(?:exception|throws))\\s+(\\S+)","captures":{"1":{"name":"keyword.other.documentation.javadoc.apex"},"2":{"name":"entity.name.type.class.apex"}}},{"match":"(`([^`]+?)`)","captures":{"1":{"name":"string.quoted.single.apex"}}}],"beginCaptures":{"1":{"name":"punctuation.definition.comment.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.comment.apex"}}}]},"literal":{"patterns":[{"include":"#boolean-literal"},{"include":"#null-literal"},{"include":"#numeric-literal"},{"include":"#string-literal"}]},"local-constant-declaration":{"begin":"(?x)\n(?\u003cconst_keyword\u003e\\b(?:const)\\b)\\s*\n(?\u003ctype_name\u003e\n  (?:\n    (?:\n      (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n      (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n        \\g\u003cidentifier\u003e\\s*\n        (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n      )\n      (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n    )\n    (?:\\s*\\?\\s*)? # nullable suffix?\n    (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n  )\n)\\s+\n(\\g\u003cidentifier\u003e)\\s*\n(?=,|;|=)","end":"(?=;)","patterns":[{"name":"entity.name.variable.local.apex","match":"@?[_[:alpha:]][_[:alnum:]]*"},{"include":"#punctuation-comma"},{"include":"#comment"},{"include":"#variable-initializer"}],"beginCaptures":{"1":{"name":"storage.modifier.apex"},"2":{"patterns":[{"include":"#type"}]},"6":{"name":"entity.name.variable.local.apex"}}},"local-declaration":{"patterns":[{"include":"#local-constant-declaration"},{"include":"#local-variable-declaration"}]},"local-variable-declaration":{"begin":"(?x)\n(?:\n  (?:(\\bref)\\s+)?(\\bvar\\b)| # ref local\n  (?\u003ctype_name\u003e\n    (?:\n      (?:ref\\s+)?   # ref local\n      (?:\n        (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n        (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n          \\g\u003cidentifier\u003e\\s*\n          (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n        )\n        (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n      )\n      (?:\\s*\\?\\s*)? # nullable suffix?\n      (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n    )\n  )\n)\\s+\n(\\g\u003cidentifier\u003e)\\s*\n(?=,|;|=|\\))","end":"(?=;|\\))","patterns":[{"name":"entity.name.variable.local.apex","match":"@?[_[:alpha:]][_[:alnum:]]*"},{"include":"#punctuation-comma"},{"include":"#comment"},{"include":"#variable-initializer"}],"beginCaptures":{"1":{"name":"storage.modifier.apex"},"2":{"name":"keyword.other.var.apex"},"3":{"patterns":[{"include":"#support-type"},{"include":"#type"}]},"7":{"name":"entity.name.variable.local.apex"}}},"member-access-expression":{"patterns":[{"match":"(?x)\n(\\??\\.)\\s*                       # safe navigator or accessor\n(@?[_[:alpha:]][_[:alnum:]]*)\\s* # property name\n(?![_[:alnum:]]|\\(|(\\?)?\\[|\u003c)    # next character is not alpha-numeric, nor a (, [, or \u003c. Also, test for ?[","captures":{"1":{"patterns":[{"include":"#punctuation-accessor"},{"include":"#operator-safe-navigation"}]},"2":{"name":"variable.other.object.property.apex"}}},{"match":"(?x)\n(\\??\\.)?\\s*\n(@?[_[:alpha:]][_[:alnum:]]*)\n(?\u003ctype_params\u003e\\s*\u003c([^\u003c\u003e]|\\g\u003ctype_params\u003e)+\u003e\\s*)\n(?=\n  (\\s*\\?)?\n  \\s*\\.\\s*@?[_[:alpha:]][_[:alnum:]]*\n)","captures":{"1":{"patterns":[{"include":"#punctuation-accessor"},{"include":"#operator-safe-navigation"}]},"2":{"name":"variable.other.object.apex"},"3":{"patterns":[{"include":"#type-arguments"}]}}},{"match":"(?x)\n(@?[_[:alpha:]][_[:alnum:]]*)\n(?=\n  (\\s*\\?)?\n  \\s*\\.\\s*@?[_[:alpha:]][_[:alnum:]]*\n)","captures":{"1":{"name":"variable.other.object.apex"}}}]},"merge-expression":{"begin":"(merge)\\b\\s+","end":"(?\u003c=\\;)","patterns":[{"include":"#object-creation-expression"},{"include":"#merge-type-statement"},{"include":"#expression"},{"include":"#punctuation-semicolon"}],"beginCaptures":{"1":{"name":"support.function.apex"}}},"merge-type-statement":{"match":"([_[:alpha:]]*)\\b\\s+([_[:alpha:]]*)\\b\\s*(\\;)","captures":{"1":{"name":"variable.other.readwrite.apex"},"2":{"name":"variable.other.readwrite.apex"},"3":{"name":"punctuation.terminator.statement.apex"}}},"method-declaration":{"begin":"(?x)\n(?\u003creturn_type\u003e\n  (?\u003ctype_name\u003e\n    (?:\n      (?:ref\\s+)?   # ref return\n      (?:\n        (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n        (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n          \\g\u003cidentifier\u003e\\s*\n          (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n        )\n        (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n      )\n      (?:\\s*\\?\\s*)? # nullable suffix?\n      (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n    )\n  )\\s+\n)\n(?\u003cinterface_name\u003e\\g\u003ctype_name\u003e\\s*\\.\\s*)?\n(\\g\u003cidentifier\u003e)\\s*\n(\u003c([^\u003c\u003e]+)\u003e)?\\s*\n(?=\\()","end":"(?\u003c=\\})|(?=;)","patterns":[{"include":"#comment"},{"include":"#parenthesized-parameter-list"},{"include":"#expression-body"},{"include":"#block"}],"beginCaptures":{"1":{"patterns":[{"include":"#support-type"},{"include":"#type"}]},"6":{"patterns":[{"include":"#type"},{"include":"#punctuation-accessor"}]},"7":{"patterns":[{"include":"#support-type"},{"include":"#method-name-custom"}]},"8":{"patterns":[{"include":"#type-parameter-list"}]}}},"method-name-custom":{"name":"entity.name.function.apex","match":"@?[_[:alpha:]][_[:alnum:]]*"},"named-argument":{"begin":"(@?[_[:alpha:]][_[:alnum:]]*)\\s*(:)","end":"(?=(,|\\)|\\]))","patterns":[{"include":"#expression"}],"beginCaptures":{"1":{"name":"entity.name.variable.parameter.apex"},"2":{"name":"punctuation.separator.colon.apex"}}},"null-literal":{"name":"constant.language.null.apex","match":"(?\u003c!\\.)\\bnull\\b"},"numeric-literal":{"patterns":[{"name":"constant.numeric.datetime.apex","match":"\\b(\\d{4}\\-\\d{2}\\-\\d{2}T\\d{2}\\:\\d{2}\\:\\d{2}(\\.\\d{1,3})?(\\-|\\+)\\d{2}\\:\\d{2})\\b"},{"name":"constant.numeric.datetime.apex","match":"\\b(\\d{4}\\-\\d{2}\\-\\d{2}T\\d{2}\\:\\d{2}\\:\\d{2}(\\.\\d{1,3})?(Z)?)\\b"},{"name":"constant.numeric.date.apex","match":"\\b(\\d{4}\\-\\d{2}\\-\\d{2})\\b"},{"name":"constant.numeric.hex.apex","match":"\\b0(x|X)[0-9a-fA-F_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\\b"},{"name":"constant.numeric.binary.apex","match":"\\b0(b|B)[01_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\\b"},{"name":"constant.numeric.decimal.apex","match":"\\b([0-9_]+)?\\.[0-9_]+((e|E)[0-9]+)?(F|f|D|d|M|m)?\\b"},{"name":"constant.numeric.decimal.apex","match":"\\b[0-9_]+(e|E)[0-9_]+(F|f|D|d|M|m)?\\b"},{"name":"constant.numeric.decimal.apex","match":"\\b[0-9_]+(F|f|D|d|M|m)\\b"},{"name":"constant.numeric.decimal.apex","match":"\\b[0-9_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\\b"}]},"object-creation-expression":{"patterns":[{"include":"#object-creation-expression-with-parameters"},{"include":"#object-creation-expression-with-no-parameters"},{"include":"#punctuation-comma"}]},"object-creation-expression-with-no-parameters":{"match":"(?x)\n(delete|insert|undelete|update|upsert)?\n\\s*(new)\\s+\n(?\u003ctype_name\u003e\n  (?:\n    (?:\n      (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n      (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n        \\g\u003cidentifier\u003e\\s*\n        (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n      )\n      (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n    )\n    (?:\\s*\\?\\s*)? # nullable suffix?\n    (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n  )\n)\\s*\n(?=\\{|$)","captures":{"1":{"name":"support.function.apex"},"2":{"name":"keyword.control.new.apex"},"3":{"patterns":[{"include":"#support-type"},{"include":"#type"}]}}},"object-creation-expression-with-parameters":{"begin":"(?x)\n(delete|insert|undelete|update|upsert)?\n\\s*(new)\\s+\n(?\u003ctype_name\u003e\n  (?:\n    (?:\n      (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n      (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n        \\g\u003cidentifier\u003e\\s*\n        (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n      )\n      (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n    )\n    (?:\\s*\\?\\s*)? # nullable suffix?\n    (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n  )\n)\\s*\n(?=\\()","end":"(?\u003c=\\))","patterns":[{"include":"#argument-list"}],"beginCaptures":{"1":{"name":"support.function.apex"},"2":{"name":"keyword.control.new.apex"},"3":{"patterns":[{"include":"#support-type"},{"include":"#type"}]}}},"operator-assignment":{"name":"keyword.operator.assignment.apex","match":"(?\u003c!=|!)(=)(?!=)"},"operator-safe-navigation":{"name":"keyword.operator.safe-navigation.apex","match":"\\?\\."},"orderby-clause":{"match":"\\b(ORDER BY)\\b\\s*","patterns":[{"include":"#ordering-direction"},{"include":"#ordering-nulls"}],"captures":{"1":{"name":"keyword.operator.query.orderby.apex"}}},"ordering-direction":{"match":"\\b(?:(ASC)|(DESC))\\b","captures":{"1":{"name":"keyword.operator.query.ascending.apex"},"2":{"name":"keyword.operator.query.descending.apex"}}},"ordering-nulls":{"match":"\\b(?:(NULLS FIRST)|(NULLS LAST))\\b","captures":{"1":{"name":"keyword.operator.query.nullsfirst.apex"},"2":{"name":"keyword.operator.query.nullslast.apex"}}},"parameter":{"match":"(?x)\n(?:(?:\\b(this)\\b)\\s+)?\n(?\u003ctype_name\u003e\n  (?:\n    (?:ref\\s+)?   # ref return\n    (?:\n      (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n      (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n        \\g\u003cidentifier\u003e\\s*\n        (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n      )\n      (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n    )\n    (?:\\s*\\?\\s*)? # nullable suffix?\n    (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n  )\n)\\s+\n(\\g\u003cidentifier\u003e)","captures":{"1":{"name":"storage.modifier.apex"},"2":{"patterns":[{"include":"#support-type"},{"include":"#type"}]},"6":{"name":"entity.name.variable.parameter.apex"}}},"parenthesized-expression":{"begin":"\\(","end":"\\)","patterns":[{"include":"#expression"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},"parenthesized-parameter-list":{"begin":"(\\()","end":"(\\))","patterns":[{"include":"#comment"},{"include":"#parameter"},{"include":"#punctuation-comma"},{"include":"#variable-initializer"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},"property-accessors":{"begin":"\\{","end":"\\}","patterns":[{"name":"storage.modifier.apex","match":"\\b(private|protected)\\b"},{"name":"keyword.other.get.apex","match":"\\b(get)\\b"},{"name":"keyword.other.set.apex","match":"\\b(set)\\b"},{"include":"#comment"},{"include":"#expression-body"},{"include":"#block"},{"include":"#punctuation-semicolon"}],"beginCaptures":{"0":{"name":"punctuation.curlybrace.open.apex"}},"endCaptures":{"0":{"name":"punctuation.curlybrace.close.apex"}}},"property-declaration":{"begin":"(?x)\n(?!.*\\b(?:class|interface|enum)\\b)\\s*\n(?\u003creturn_type\u003e\n  (?\u003ctype_name\u003e\n    (?:\n      (?:ref\\s+)?   # ref return\n      (?:\n        (?:(?\u003cidentifier\u003e@?[_[:alpha:]][_[:alnum:]]*)\\s*\\:\\:\\s*)? # alias-qualification\n        (?\u003cname_and_type_args\u003e # identifier + type arguments (if any)\n          \\g\u003cidentifier\u003e\\s*\n          (?\u003ctype_args\u003e\\s*\u003c(?:[^\u003c\u003e]|\\g\u003ctype_args\u003e)+\u003e\\s*)?\n        )\n        (?:\\s*\\.\\s*\\g\u003cname_and_type_args\u003e)*\n      )\n      (?:\\s*\\?\\s*)? # nullable suffix?\n      (?:\\s*\\[(?:\\s*,\\s*)*\\]\\s*)* # array suffix?\n    )\n  )\\s+\n)\n(?\u003cinterface_name\u003e\\g\u003ctype_name\u003e\\s*\\.\\s*)?\n(?\u003cproperty_name\u003e\\g\u003cidentifier\u003e)\\s*\n(?=\\{|=\u003e|$)","end":"(?\u003c=\\})|(?=;)","patterns":[{"include":"#comment"},{"include":"#property-accessors"},{"include":"#expression-body"},{"include":"#variable-initializer"},{"include":"#class-or-trigger-members"}],"beginCaptures":{"1":{"patterns":[{"include":"#type"}]},"6":{"patterns":[{"include":"#type"},{"include":"#punctuation-accessor"}]},"7":{"name":"entity.name.variable.property.apex"}}},"punctuation-accessor":{"name":"punctuation.accessor.apex","match":"\\."},"punctuation-comma":{"name":"punctuation.separator.comma.apex","match":","},"punctuation-semicolon":{"name":"punctuation.terminator.statement.apex","match":";"},"query-operators":{"match":"\\b(ABOVE|AND|AT|FOR REFERENCE|FOR UPDATE|FOR VIEW|GROUP BY|HAVING|IN|LIKE|LIMIT|NOT IN|NOT|OFFSET|OR|TYPEOF|UPDATE TRACKING|UPDATE VIEWSTAT|WITH DATA CATEGORY|WITH)\\b\\s*","captures":{"1":{"name":"keyword.operator.query.apex"}}},"return-statement":{"begin":"(?\u003c!\\.)\\b(return)\\b","end":"(?=;)","patterns":[{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.control.flow.return.apex"}}},"script-top-level":{"patterns":[{"include":"#method-declaration"},{"include":"#statement"},{"include":"#punctuation-semicolon"}]},"sharing-modifier":{"name":"sharing.modifier.apex","match":"(?\u003c!\\.)\\b(with sharing|without sharing|inherited sharing)\\b"},"soql-colon-method-statement":{"begin":"(:?\\.)?([_[:alpha:]][_[:alnum:]]*)(?=\\()","end":"(?\u003c=\\))","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"include":"#expression"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#statement"}],"beginCaptures":{"1":{"name":"punctuation.accessor.apex"},"2":{"name":"entity.name.function.apex"}}},"soql-colon-vars":{"begin":"(\\:)\\s*","end":"(?![_[:alnum:]]|\\(|(\\?)?\\[|\u003c)","patterns":[{"include":"#trigger-context-declaration"},{"match":"([_[:alpha:]][_[:alnum:]]*)(\\??\\.)","captures":{"1":{"name":"variable.other.object.apex"},"2":{"patterns":[{"include":"#punctuation-accessor"},{"include":"#operator-safe-navigation"}]}}},{"include":"#soql-colon-method-statement"},{"name":"entity.name.variable.local.apex","match":"[_[:alpha:]][_[:alnum:]]*"}],"beginCaptures":{"0":{"name":"keyword.operator.conditional.colon.apex"}}},"soql-functions":{"begin":"\\b(AVG|CALENDAR_MONTH|CALENDAR_QUARTER|CALENDAR_YEAR|convertCurrency|convertTimezone|COUNT|COUNT_DISTINCT|DAY_IN_MONTH|DAY_IN_WEEK|DAY_IN_YEAR|DAY_ONLY|toLabel|INCLUDES|EXCLUDES|FISCAL_MONTH|FISCAL_QUARTER|FISCAL_YEAR|FORMAT|GROUPING|GROUP BY CUBE|GROUP BY ROLLUP|HOUR_IN_DAY|MAX|MIN|SUM|WEEK_IN_MONTH|WEEK_IN_YEAR)\\s*(\\()","end":"\\)","patterns":[{"include":"#literal"},{"include":"#punctuation-comma"},{"include":"#soql-functions"},{"name":"keyword.query.field.apex","match":"[_.[:alpha:]][_.[:alnum:]]*"}],"beginCaptures":{"1":{"name":"support.function.query.apex"},"2":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},"soql-group-clauses":{"begin":"\\(","end":"\\)","patterns":[{"include":"#soql-query-expression"},{"include":"#soql-colon-vars"},{"include":"#soql-group-clauses"},{"include":"#punctuation-comma"},{"include":"#operator-assignment"},{"include":"#literal"},{"include":"#query-operators"},{"include":"#date-literals"},{"include":"#date-literal-with-params"},{"include":"#using-scope"},{"name":"keyword.query.field.apex","match":"[_.[:alpha:]][_.[:alnum:]]*"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},"soql-query-body":{"patterns":[{"include":"#trigger-context-declaration"},{"include":"#soql-colon-vars"},{"include":"#soql-functions"},{"include":"#from-clause"},{"include":"#where-clause"},{"include":"#query-operators"},{"include":"#date-literals"},{"include":"#date-literal-with-params"},{"include":"#using-scope"},{"include":"#soql-group-clauses"},{"include":"#orderby-clause"},{"include":"#ordering-direction"},{"include":"#ordering-nulls"}]},"soql-query-expression":{"begin":"\\b(SELECT)\\b\\s*","end":"(?=;)|(?=\\])|(?=\\))","patterns":[{"include":"#soql-query-body"},{"include":"#punctuation-comma"},{"include":"#operator-assignment"},{"include":"#parenthesized-expression"},{"include":"#expression-operators"},{"include":"#literal"},{"match":"([_.[:alpha:]][_.[:alnum:]]*)\\s*(\\,)?","captures":{"1":{"name":"keyword.query.field.apex"},"2":{"name":"punctuation.separator.comma.apex"}}}],"beginCaptures":{"1":{"name":"keyword.operator.query.select.apex"}}},"soqlHeaderComment":{"name":"comment.line","begin":"^\\s*//.*$","while":"^\\s*//.*$"},"statement":{"patterns":[{"include":"#comment"},{"include":"#while-statement"},{"include":"#do-statement"},{"include":"#for-statement"},{"include":"#switch-statement"},{"include":"#when-else-statement"},{"include":"#when-sobject-statement"},{"include":"#when-statement"},{"include":"#when-multiple-statement"},{"include":"#if-statement"},{"include":"#else-part"},{"include":"#goto-statement"},{"include":"#return-statement"},{"include":"#break-or-continue-statement"},{"include":"#throw-statement"},{"include":"#try-statement"},{"include":"#soql-query-expression"},{"include":"#local-declaration"},{"include":"#block"},{"include":"#expression"},{"include":"#punctuation-semicolon"}]},"storage-modifier":{"name":"storage.modifier.apex","match":"(?\u003c!\\.)\\b(new|public|protected|private|abstract|virtual|override|global|static|final|transient)\\b"},"string-character-escape":{"name":"constant.character.escape.apex","match":"\\\\."},"string-literal":{"name":"string.quoted.single.apex","begin":"'","end":"(\\')|((?:[^\\\\\\n])$)","patterns":[{"include":"#string-character-escape"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.apex"}},"endCaptures":{"1":{"name":"punctuation.definition.string.end.apex"},"2":{"name":"invalid.illegal.newline.apex"}}},"support-arguments":{"begin":"\u003c","end":"\u003e","patterns":[{"include":"#comment"},{"include":"#support-type"},{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.definition.typeparameters.begin.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.typeparameters.end.apex"}}},"support-class":{"match":"\\b(ApexPages|Database|DMLException|Exception|PageReference|Savepoint|SchedulableContext|Schema|SObject|System|Test)\\b","captures":{"1":{"name":"support.class.apex"}}},"support-expression":{"begin":"(?x)\n(ApexPages|Database|DMLException|Exception|PageReference|Savepoint|SchedulableContext|Schema|SObject|System|Test)(?=\\.|\\s) # supported apex namespaces","end":"(?\u003c=\\)|$)|(?=\\})|(?=;)|(?=\\)|(?=\\]))|(?=\\,)","patterns":[{"include":"#support-type"},{"match":"(?:(\\.))([[:alpha:]]*)(?=\\()","captures":{"1":{"name":"punctuation.accessor.apex"},"2":{"name":"support.function.apex"}}},{"match":"(?:(\\.))([[:alpha:]]+)","captures":{"1":{"name":"punctuation.accessor.apex"},"2":{"name":"support.type.apex"}}},{"begin":"\\(","end":"\\)","patterns":[{"include":"#expression"},{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#comment"},{"include":"#statement"}],"beginCaptures":{"1":{"name":"support.class.apex"}}},"support-functions":{"match":"\\b(delete|execute|finish|insert|start|undelete|update|upsert)\\b","captures":{"1":{"name":"support.function.apex"}}},"support-name":{"patterns":[{"match":"(\\.)\\s*([[:alpha:]]*)(?=\\()","captures":{"1":{"name":"punctuation.accessor.apex"},"2":{"name":"support.function.apex"}}},{"begin":"\\(","end":"\\)","patterns":[{"include":"#expression"},{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"match":"(\\.)\\s*([_[:alpha:]]*)","captures":{"1":{"name":"punctuation.accessor.apex"},"2":{"name":"support.type.apex"}}}]},"support-type":{"name":"support.apex","patterns":[{"include":"#comment"},{"include":"#support-class"},{"include":"#support-functions"},{"include":"#support-name"}]},"switch-statement":{"begin":"(?x)\n(switch)\\b\\s+\n(on)\\b\\s+\n(?:([_.?\\'\\(\\)[:alnum:]]+)\\s*)?\n(\\{)","end":"(\\})","patterns":[{"include":"#when-string"},{"include":"#when-else-statement"},{"include":"#when-sobject-statement"},{"include":"#when-statement"},{"include":"#when-multiple-statement"},{"include":"#expression"},{"include":"#punctuation-comma"},{"include":"#punctuation-semicolon"}],"beginCaptures":{"1":{"name":"keyword.control.switch.apex"},"2":{"name":"keyword.control.switch.on.apex"},"3":{"patterns":[{"include":"#statement"},{"include":"#parenthesized-expression"}]},"4":{"name":"punctuation.curlybrace.open.apex"}},"endCaptures":{"0":{"name":"punctuation.curlybrace.close.apex"}}},"this-expression":{"match":"\\b(?:(this))\\b","captures":{"1":{"name":"keyword.other.this.apex"}}},"throw-expression":{"match":"(?\u003c!\\.)\\b(throw)\\b","captures":{"1":{"name":"keyword.control.flow.throw.apex"}}},"throw-statement":{"begin":"(?\u003c!\\.)\\b(throw)\\b","end":"(?=;)","patterns":[{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.control.flow.throw.apex"}}},"trigger-context-declaration":{"begin":"\\b(?:(Trigger))\\b(\\.)\\b","end":"(?=\\})|(?=;)|(?=\\)|(?=\\]))","patterns":[{"name":"support.type.trigger.apex","match":"\\b(isExecuting|isInsert|isUpdate|isDelete|isBefore|isAfter|isUndelete|new|newMap|old|oldMap|size)\\b"},{"match":"(?:(\\??\\.))([[:alpha:]]+)(?=\\()","captures":{"1":{"patterns":[{"include":"#punctuation-accessor"},{"include":"#operator-safe-navigation"}]},"2":{"name":"support.function.trigger.apex"}}},{"begin":"\\(","end":"\\)","patterns":[{"include":"#trigger-type-statement"},{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#expression"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#expression"}],"beginCaptures":{"1":{"name":"support.class.trigger.apex"},"2":{"name":"punctuation.accessor.apex"}}},"trigger-declaration":{"begin":"(?=\\btrigger\\b)","end":"(?\u003c=\\})","patterns":[{"begin":"(?x)\n\\b(trigger)\\b\\s+\n(@?[_[:alpha:]][_[:alnum:]]*)\\s*\n\\b(on)\\b\\s+\n([_[:alpha:]][_[:alnum:]]*)\\s*","end":"(?=\\{)","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"include":"#trigger-type-statement"},{"include":"#trigger-operator-statement"},{"include":"#punctuation-comma"},{"include":"#expression"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#type-parameter-list"}],"beginCaptures":{"1":{"name":"keyword.other.trigger.apex"},"2":{"name":"entity.name.type.trigger.apex"},"3":{"name":"keyword.operator.trigger.on.apex"},"4":{"name":"storage.type.apex"}}},{"begin":"\\{","end":"\\}","patterns":[{"include":"#statement"},{"include":"#class-or-trigger-members"}],"beginCaptures":{"0":{"name":"punctuation.curlybrace.open.apex"}},"endCaptures":{"0":{"name":"punctuation.curlybrace.close.apex"}}},{"include":"#javadoc-comment"},{"include":"#comment"}]},"trigger-operator-statement":{"name":"keyword.operator.trigger.apex","match":"\\b(insert|update|delete|merge|upsert|undelete)\\b"},"trigger-type-statement":{"match":"\\b(?:(before)|(after))\\b","captures":{"1":{"name":"keyword.control.trigger.before.apex"},"2":{"name":"keyword.control.trigger.after.apex"}}},"try-block":{"begin":"(?\u003c!\\.)\\b(try)\\b","end":"(?\u003c=\\})","patterns":[{"include":"#comment"},{"include":"#block"}],"beginCaptures":{"1":{"name":"keyword.control.try.apex"}}},"try-statement":{"patterns":[{"include":"#try-block"},{"include":"#catch-clause"},{"include":"#finally-clause"}]},"type":{"name":"meta.type.apex","patterns":[{"include":"#comment"},{"include":"#type-builtin"},{"include":"#type-name"},{"include":"#type-arguments"},{"include":"#type-array-suffix"},{"include":"#type-nullable-suffix"}]},"type-arguments":{"begin":"\u003c","end":"\u003e","patterns":[{"include":"#comment"},{"include":"#support-type"},{"include":"#type"},{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.definition.typeparameters.begin.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.typeparameters.end.apex"}}},"type-array-suffix":{"begin":"\\[","end":"\\]","patterns":[{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.squarebracket.open.apex"}},"endCaptures":{"0":{"name":"punctuation.squarebracket.close.apex"}}},"type-builtin":{"match":"\\b(Blob|Boolean|byte|Date|Datetime|Decimal|Double|ID|Integer|Long|Object|String|Time|void)\\b","captures":{"1":{"name":"keyword.type.apex"}}},"type-declarations":{"patterns":[{"include":"#javadoc-comment"},{"include":"#comment"},{"include":"#annotation-declaration"},{"include":"#storage-modifier"},{"include":"#sharing-modifier"},{"include":"#class-declaration"},{"include":"#enum-declaration"},{"include":"#interface-declaration"},{"include":"#trigger-declaration"},{"include":"#punctuation-semicolon"}]},"type-name":{"patterns":[{"match":"(@?[_[:alpha:]][_[:alnum:]]*)\\s*(\\.)","captures":{"1":{"name":"storage.type.apex"},"2":{"name":"punctuation.accessor.apex"}}},{"match":"(\\.)\\s*(@?[_[:alpha:]][_[:alnum:]]*)","captures":{"1":{"name":"punctuation.accessor.apex"},"2":{"name":"storage.type.apex"}}},{"name":"storage.type.apex","match":"@?[_[:alpha:]][_[:alnum:]]*"}]},"type-nullable-suffix":{"match":"\\?","captures":{"0":{"name":"punctuation.separator.question-mark.apex"}}},"type-parameter-list":{"begin":"\\\u003c","end":"\\\u003e","patterns":[{"match":"(@?[_[:alpha:]][_[:alnum:]]*)\\b","captures":{"1":{"name":"entity.name.type.type-parameter.apex"}}},{"include":"#comment"},{"include":"#punctuation-comma"}],"beginCaptures":{"0":{"name":"punctuation.definition.typeparameters.begin.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.typeparameters.end.apex"}}},"using-scope":{"match":"((USING SCOPE)\\b\\s*(Delegated|Everything|Mine|My_Territory|My_Team_Territory|Team))\\b\\s*","captures":{"1":{"name":"keyword.operator.query.using.apex"}}},"variable-initializer":{"begin":"(?\u003c!=|!)(=)(?!=|\u003e)","end":"(?=[,\\)\\];}])","patterns":[{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.operator.assignment.apex"}}},"when-else-statement":{"begin":"(when)\\b\\s+(else)\\b\\s*","end":"(?\u003c=\\})","patterns":[{"include":"#block"},{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.control.switch.when.apex"},"2":{"name":"keyword.control.switch.else.apex"}}},"when-multiple-statement":{"begin":"(when)\\b\\s*","end":"(?\u003c=\\})","patterns":[{"include":"#block"},{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.control.switch.when.apex"}}},"when-sobject-statement":{"begin":"(when)\\b\\s+([_[:alnum:]]+)\\s+([_[:alnum:]]+)\\s*","end":"(?\u003c=\\})","patterns":[{"include":"#block"},{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.control.switch.when.apex"},"2":{"name":"storage.type.apex"},"3":{"name":"entity.name.variable.local.apex"}}},"when-statement":{"begin":"(when)\\b\\s+([\\'_\\-[:alnum:]]+)\\s*","end":"(?\u003c=\\})","patterns":[{"include":"#block"},{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.control.switch.when.apex"},"2":{"patterns":[{"include":"#expression"}]}}},"when-string":{"begin":"(when)(\\b\\s*)((\\')[_.\\,\\'\\s*[:alnum:]]+)","end":"(?\u003c=\\})","patterns":[{"include":"#block"},{"include":"#expression"}],"beginCaptures":{"1":{"name":"keyword.control.switch.when.apex"},"2":{"name":"punctuation.whitespace.apex"},"3":{"patterns":[{"include":"#when-string-statement"},{"include":"#punctuation-comma"}]}}},"when-string-statement":{"patterns":[{"name":"string.quoted.single.apex","begin":"\\'","end":"\\'","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.apex"}}}]},"where-clause":{"match":"\\b(WHERE)\\b\\s*","captures":{"1":{"name":"keyword.operator.query.where.apex"}}},"while-statement":{"begin":"(?\u003c!\\.)\\b(while)\\b\\s*(?=\\()","end":"(?\u003c=\\})|(?=;)","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"include":"#expression"}],"beginCaptures":{"0":{"name":"punctuation.parenthesis.open.apex"}},"endCaptures":{"0":{"name":"punctuation.parenthesis.close.apex"}}},{"include":"#statement"}],"beginCaptures":{"1":{"name":"keyword.control.loop.while.apex"}}},"xml-attribute":{"patterns":[{"match":"(?x)\n(?:^|\\s+)\n(\n  (?:\n    ([-_[:alnum:]]+)\n    (:)\n  )?\n  ([-_[:alnum:]]+)\n)\n(=)","captures":{"1":{"name":"entity.other.attribute-name.apex"},"2":{"name":"entity.other.attribute-name.namespace.apex"},"3":{"name":"punctuation.separator.colon.apex"},"4":{"name":"entity.other.attribute-name.localname.apex"},"5":{"name":"punctuation.separator.equals.apex"}}},{"include":"#xml-string"}]},"xml-cdata":{"name":"string.unquoted.cdata.apex","begin":"\u003c!\\[CDATA\\[","end":"\\]\\]\u003e","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.apex"}}},"xml-character-entity":{"patterns":[{"name":"constant.character.entity.apex","match":"(?x)\n(\u0026)\n(\n  (?:[[:alpha:]:_][[:alnum:]:_.-]*)|\n  (?:\\#[[:digit:]]+)|\n  (?:\\#x[[:xdigit:]]+)\n)\n(;)","captures":{"1":{"name":"punctuation.definition.constant.apex"},"3":{"name":"punctuation.definition.constant.apex"}}},{"name":"invalid.illegal.bad-ampersand.apex","match":"\u0026"}]},"xml-comment":{"name":"comment.block.apex","begin":"\u003c!--","end":"--\u003e","beginCaptures":{"0":{"name":"punctuation.definition.comment.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.comment.apex"}}},"xml-doc-comment":{"patterns":[{"include":"#xml-comment"},{"include":"#xml-character-entity"},{"include":"#xml-cdata"},{"include":"#xml-tag"}]},"xml-string":{"patterns":[{"name":"string.quoted.single.apex","begin":"\\'","end":"\\'","patterns":[{"include":"#xml-character-entity"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.apex"}}},{"name":"string.quoted.double.apex","begin":"\\\"","end":"\\\"","patterns":[{"include":"#xml-character-entity"}],"beginCaptures":{"0":{"name":"punctuation.definition.stringdoublequote.begin.apex"}},"endCaptures":{"0":{"name":"punctuation.definition.stringdoublequote.end.apex"}}}]},"xml-tag":{"name":"meta.tag.apex","begin":"(?x)\n(\u003c/?)\n(\n  (?:\n    ([-_[:alnum:]]+)\n    (:)\n  )?\n  ([-_[:alnum:]]+)\n)","end":"(/?\u003e)","patterns":[{"include":"#xml-attribute"}],"beginCaptures":{"1":{"name":"punctuation.definition.tag.apex"},"2":{"name":"entity.name.tag.apex"},"3":{"name":"entity.name.tag.namespace.apex"},"4":{"name":"punctuation.separator.colon.apex"},"5":{"name":"entity.name.tag.localname.apex"}},"endCaptures":{"1":{"name":"punctuation.definition.tag.apex"}}}}}
