{"name":"Aiken","scopeName":"source.aiken","patterns":[{"include":"#comments"},{"include":"#keywords"},{"include":"#strings"},{"include":"#constant"},{"include":"#entity"}],"repository":{"binary_number":{"name":"constant.numeric.binary.aiken","match":"\\b0b[0-1]+\\b"},"boolean":{"name":"constant.language.boolean.aiken","match":"\\b(True|False)\\b"},"comments":{"patterns":[{"name":"comment.line.aiken","match":"//.*"}]},"constant":{"patterns":[{"include":"#binary_number"},{"include":"#octal_number"},{"include":"#hexadecimal_number"},{"include":"#decimal_number"},{"include":"#boolean"},{"name":"entity.name.type.aiken","match":"[[:upper:]][[:word:]]*"}]},"decimal_number":{"name":"constant.numeric.decimal.aiken","match":"\\b[[:digit:]][[:digit:]_]*(\\.[[:digit:]]*)?\\b"},"entity":{"patterns":[{"begin":"\\b([[:lower:]][[:word:]]*)([[:space:]]*)?\\(","end":"\\)","patterns":[{"include":"$self"}],"captures":{"1":{"name":"entity.name.function.aiken"}}},{"name":"variable.parameter.aiken","match":"\\b([[:lower:]][[:word:]]*):\\s"},{"name":"entity.name.namespace.aiken","match":"\\b([[:lower:]][[:word:]]*):"}]},"hexadecimal_number":{"name":"constant.numeric.hexadecimal.aiken","match":"\\b0x[[:xdigit:]]+\\b"},"keywords":{"patterns":[{"name":"keyword.control.aiken","match":"\\b(if|else|when|is|fn|use|let|pub|type|opaque|const|todo|expect|test|bench|trace|fail|validator|and|or|as|via|once)\\b"},{"name":"keyword.operator.arrow.aiken","match":"-\u003e"},{"name":"keyword.operator.back_arrow.aiken","match":"\u003c-"},{"name":"keyword.operator.pipe.aiken","match":"\\|\u003e"},{"name":"keyword.operator.splat.aiken","match":"\\.\\."},{"name":"keyword.operator.comparison.aiken","match":"(\u003c=|\u003e=|==|!=|\u003c|\u003e)"},{"name":"keyword.operator.logical.aiken","match":"(\u0026\u0026|\\|\\|)"},{"name":"keyword.operator.other.aiken","match":"\\|"},{"name":"keyword.operator.arithmetic.aiken","match":"(\\+|\\-|/|\\*|%)"},{"name":"keyword.operator.assignment.aiken","match":"="}]},"octal_number":{"name":"constant.numeric.octal.aiken","match":"\\b0o[0-7]+\\b"},"strings":{"name":"string.quoted.double.aiken","begin":"\"","end":"\"","patterns":[{"name":"constant.character.escape.aiken","match":"\\\\."}]}}}
