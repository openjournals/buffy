{"name":"openqasm","scopeName":"source.openqasm","patterns":[{"include":"#comments"},{"include":"#keywords"},{"include":"#operators"},{"include":"#types"},{"include":"#constants"},{"include":"#strings"},{"include":"#brackets"},{"include":"#variables"}],"repository":{"brackets":{"patterns":[{"name":"punctuation.bracket.openqasm","match":"[\\[\\]\\(\\)\\{\\}]"}]},"comments":{"patterns":[{"name":"comment.line.double-slash","match":"//.*$"},{"name":"comment.block","begin":"/\\*","end":"\\*/"}]},"constants":{"patterns":[{"name":"constant.language.openqasm","match":"\\b(true|false|theta|pi|θ|π|ℇ|τ|euler|tau|λ|lambda|φ|phi|@)\\b"},{"name":"constant.numeric.openqasm","match":"\\b[\\d_]*\\.?[\\d_](im|dt|ns|us|ms|s|)?\\b"}]},"keywords":{"patterns":[{"name":"keyword.control.openqasm","match":"\\b(in|for|return|if|else|switch|while)\\b"},{"name":"keyword.other.openqasm","match":"\\b(OPENQASM|include|qubit|reset|mutable|readonly|#dim|stretch|delay|barrier|box|input|output|int|float|bit|bool|uint|angle|complex|const|defcal|def|gate|array|duration|let|measure|pragma|defcalgrammar|cal|qreg|creg|extern|port|frame|waveform)\\b"}]},"operators":{"patterns":[{"name":"keyword.other.operator.openqasm","match":"\\b(=)|(!)|(\u003c)|(\u003e)|(\\+)|(-)|(\\*)|(\\*\\*)|(\\/)|(\\^)|(%)|(\\|)|(\\\u0026)|(\\\u0026\\\u0026)|(\\~)|(\\|\\|)|(\u003c\u003c)|(\u003e\u003e)"}]},"strings":{"name":"string.quoted.double.openqasm","begin":"\"","end":"\"","patterns":[{"name":"constant.character.escape.openqasm","match":"\\\\."}]},"types":{"patterns":[{"name":"storage.type.openqasm","match":"\\b(angle|bit|bool|complex|duration|float|int|stretch|uint|qreg|creg)(\\[[a-zA-Z_][a-zA-Z0-9_]*\\])?\\b"}]},"variables":{"patterns":[{"name":"variable.other.openqasm","match":"\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"}]}}}
