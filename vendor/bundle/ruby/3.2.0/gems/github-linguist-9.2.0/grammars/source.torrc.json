{"name":"Tor Configuration","scopeName":"source.torrc","patterns":[{"begin":"\\A(?=[ \\t]*$|This document)","end":"(?=\\S)","patterns":[{"name":"meta.document.torrc-spec","begin":"^(?=This document specifies the current format and semantics of the torrc)","end":"(?=A)B","patterns":[{"name":"meta.section.file-syntax.torrc-spec","contentName":"source.embedded.abnf","begin":"(?i)^(\\s*)((1\\.)\\s+File\\s+Syntax)[ \\t]*$","end":"(?=^(?:(?!\\s)|\\1)(?:\\d+\\.)+\\s+)","patterns":[{"include":"source.abnf"}],"beginCaptures":{"1":{"name":"punctuation.whitespace.leading.indentation.torrc-spec"},"2":{"name":"markup.heading.1.numbered.torrc-spec"},"3":{"name":"constant.numeric.section-number.torrc-spec"}}},{"name":"meta.section.syntax-examples.torrc-spec","contentName":"source.embedded.torrc","begin":"(?i)^(\\s*)(((?:\\d+\\.){2})\\s+Syntax\\s+examples)[ \\t]*$","end":"(?=A)B","patterns":[{"include":"source.torrc#main"}],"beginCaptures":{"1":{"name":"punctuation.whitespace.leading.indentation.torrc-spec"},"2":{"name":"markup.heading.2.numbered.torrc-spec"},"3":{"name":"constant.numeric.section-number.torrc-spec"}}},{"name":"meta.section.other.torrc-spec","contentName":"text.embedded.plain","begin":"(?i)^(\\s*)((\\d+\\.)\\s+(?!Syntax\\s+examples\\s*$)\\S.*)[ \\t]*$","end":"(?=^(?:(?!\\s)|\\1)(?:\\d+\\.)+\\s+)","patterns":[{}],"beginCaptures":{"1":{"name":"punctuation.whitespace.leading.indentation.torrc-spec"},"2":{"name":"markup.heading.1.numbered.torrc-spec"},"3":{"name":"constant.numeric.section-number.torrc-spec"}}}]}],"applyEndPatternLast":true},{"include":"#main"}],"repository":{"address":{"patterns":[{"name":"meta.address.torrc","match":"(?ix)\n(?:\n\t# “hostname:…”\n\t([^\\[\\]\\s:#,]+) (:)\n\t|\n\t# No first part, just match anything that quacks like an IP addy\n\t(?=\\[)\n)\n\n# DRY and TextMate-friendly hack to assert balanced but optional brackets\n(?:\n\t# If an opening bracket follows, require an accompanying closing bracket \n\t(?= \\[ [^\\[\\]\\s,\\#]*+ \\])\n\t|\n\t# Otherwise, avoid matching unbalanced brackets\n\t(?!\\[)\n)\n\n(\\[)?\n(?: (\\d{1,3}(?:\\.\\d{1,3})+)     # IPv4 address\n|   (:*[0-9A-F]+(?::+[0-9A-F]*)*+) # IPv6 address\n|   (\\d+)                         # Port?\n)\n(\\])?\n(?=\\s|,|$|\\#)","captures":{"1":{"patterns":[{"include":"source.hosts#modern"}]},"2":{"patterns":[{"include":"etc#colon"}]},"3":{"name":"punctuation.definition.address.begin.torrc"},"4":{"patterns":[{"include":"etc#ipv4"}]},"5":{"patterns":[{"include":"etc#ipv6"}]},"6":{"patterns":[{"include":"#port"}]},"7":{"name":"punctuation.definition.address.end.torrc"}}},{"match":"(\\[)([^\\[\\]]+)(\\])((/)(\\d+))","captures":{"1":{"name":"punctuation.definition.ipv6-address.begin.torrc"},"2":{"patterns":[{"include":"etc#ipv6"}]},"3":{"name":"punctuation.definition.ipv6-address.end.torrc"},"4":{"name":"meta.cidr-notation"},"5":{"name":"keyword.operator.assignment.cidr"},"6":{"patterns":[{"include":"etc#intNoExp"}]}}}]},"anyIP":{"match":"\\*[46]?(?::\\*)?","captures":{"0":{"patterns":[{"name":"keyword.operator.wildcard.match-ipv$1.torrc","match":"\\*(\\d)"},{"name":"keyword.operator.wildcard.match-all.torrc","match":"\\*"},{"include":"etc#colon"}]}}},"cc":{"name":"constant.language.country-code.${2:/downcase}.torrc","match":"(\\{)(?:([A-Za-z]{2})|(\\?\\?))(\\})","captures":{"1":{"name":"punctuation.definition.country-code.begin.torrc"},"3":{"name":"constant.character.escape.wildcard.match-any.torrc"},"4":{"name":"punctuation.definition.country-code.end.torrc"}}},"comment":{"name":"comment.line.number-sign.torrc","begin":"#","end":"$","beginCaptures":{"0":{"name":"punctuation.definition.comment.torrc"}}},"commentEmbedded":{"contentName":"comment.line.number-sign.embedded.torrc","begin":"[ \\t]*(?=#)","end":"(?!\\G)^","patterns":[{"name":"punctuation.definition.comment.torrc","match":"\\G#"}]},"entry":{"name":"meta.entry.${3:/downcase/asciify}.torrc","begin":"^\\s*(?:(/)|(\\+))?((?:[^\\s#\\0\\\\]|\\\\(?!$))++)","end":"(?!\\G)","patterns":[{"name":"meta.numeric-setting.torrc","begin":"(?ix)\n# Unitless\n(?\u003c= AddressDisableIPv6\n| AllowNonRFC953Hostnames\n| AssumeReachableIPv6\n| AssumeReachable\n| AuthDirHasIPv6Connectivity\n| AuthDirListBadExits\n| AuthDirListMiddleOnly\n| AuthDirMaxServersPerAddr\n| AuthDirPinKeys\n| AuthDirRejectRequestsUnderLoad\n| AuthDirSharedRandomness\n| AuthDirTestEd25519LinkKeys\n| AuthDirTestReachability\n| AuthoritativeDirectory\n| AutomapHostsOnResolve\n| AvoidDiskWrites\n| BridgeAuthoritativeDir\n| BridgeRecordUsageByCountry\n| BridgeRelay\n| CacheDirectoryGroupReadable\n| CellStatistics\n| CircuitBuildTimeout\n| CircuitPadding\n| CircuitPriorityHalflife\n| CircuitStreamTimeout\n| CircuitsAvailableTimeout\n| ClientBootstrapConsensusAuthorityDownloadInitialDelay\n| ClientBootstrapConsensusAuthorityOnlyDownloadInitialDelay\n| ClientBootstrapConsensusFallbackDownloadInitialDelay\n| ClientBootstrapConsensusMaxInProgressTries\n| ClientDNSRejectInternalAddresses\n| ClientOnly\n| ClientPreferIPv6DirPort\n| ClientPreferIPv6ORPort\n| ClientRejectInternalAddresses\n| ClientUseIPv4\n| ClientUseIPv6\n| CompiledProofOfWorkHash\n| ConfluxEnabled\n| ConnDirectionStatistics\n| ConnLimit\n| ConnectionPadding\n| ConstrainedSockets\n| ControlPortFileGroupReadable\n| ControlSocketsGroupWritable\n| CookieAuthFileGroupReadable\n| CookieAuthentication\n| CountPrivateBandwidth\n| DataDirectoryGroupReadable\n| DirAllowPrivateAddresses\n| DirAuthorityFallbackRate\n| DirCache\n| DirReqStatistics\n| DisableAllSwap\n| DisableDebuggerAttachment\n| DisableNetwork\n| DisableOOSCheck\n| DoSCircuitCreationBurst\n| DoSCircuitCreationDefenseType\n| DoSCircuitCreationEnabled\n| DoSCircuitCreationMinConnections\n| DoSCircuitCreationRate\n| DoSConnectionConnectBurst\n| DoSConnectionConnectRate\n| DoSConnectionDefenseType\n| DoSConnectionEnabled\n| DoSConnectionMaxConcurrentCount\n| DoSRefuseSingleHopClientRendezvous\n| DoSStreamCreationBurst\n| DoSStreamCreationDefenseType\n| DoSStreamCreationEnabled\n| DoSStreamCreationRate\n| DormantCanceledByStartup\n| DormantOnFirstStartup\n| DormantTimeoutDisabledByIdleStreams\n| DormantTimeoutEnabled\n| DownloadExtraInfo\n| EnforceDistinctSubnets\n| EntryStatistics\n| ExitPolicyRejectLocalInterfaces\n| ExitPolicyRejectPrivate\n| ExitPortStatistics\n| ExitRelay\n| ExtORPortCookieAuthFileGroupReadable\n| ExtendAllowPrivateAddresses\n| ExtendByEd25519ID\n| ExtraInfoStatistics\n| FascistFirewall\n| FetchDirInfoEarly\n| FetchDirInfoExtraEarly\n| FetchHidServDescriptors\n| FetchServerDescriptors\n| FetchUselessDescriptors\n| GeoIPExcludeUnknown\n| HardwareAccel\n| HiddenServiceAllowUnknownPorts\n| HiddenServiceDirGroupReadable\n| HiddenServiceEnableIntroDoSBurstPerSec\n| HiddenServiceEnableIntroDoSDefense\n| HiddenServiceEnableIntroDoSRatePerSec\n| HiddenServiceMaxStreamsCloseCircuit\n| HiddenServiceMaxStreams\n| HiddenServiceNonAnonymousMode\n| HiddenServiceNumIntroductionPoints\n| HiddenServiceOnionBalanceInstance\n| HiddenServicePoWDefensesEnabled\n| HiddenServicePoWQueueBurst\n| HiddenServicePoWQueueRate\n| HiddenServiceSingleHopMode\n| HiddenServiceStatistics\n| HiddenServiceVersion\n| IPv6Exit\n| KISTSockBufSizeFactor\n| KeepBindCapabilities\n| KeepalivePeriod\n| KeyDirectoryGroupReadable\n| LearnCircuitBuildTimeout\n| LogMessageDomains\n| LogTimeGranularity\n| MainloopStats\n| MaxCircuitDirtiness\n| MaxClientCircuitsPending\n| MinMeasuredBWsForAuthToIgnoreAdvertised\n| NewCircuitPeriod\n| NoExec\n| NumCPUs\n| NumDirectoryGuards\n| NumEntryGuards\n| NumPrimaryGuards\n| OfflineMasterKey\n| OverloadStatistics\n| PaddingStatistics\n| PathBiasScaleThreshold\n| PathBiasScaleUseThreshold\n| PathsNeededToBuildCircuits\n| ProtocolWarnings\n| PublishHidServDescriptors\n| PublishServerDescriptor\n| ReducedCircuitPadding\n| ReducedConnectionPadding\n| ReducedExitPolicy\n| ReevaluateExitPolicy\n| RefuseUnknownExits\n| RunAsDaemon\n| SafeLogging\n| SafeSocks\n| Sandbox\n| ServerDNSAllowBrokenConfig\n| ServerDNSAllowNonRFC953Hostnames\n| ServerDNSDetectHijacking\n| ServerDNSRandomizeCase\n| ServerDNSSearchDomains\n| ShutdownWaitLength\n| SocksTimeout\n| StrictNodes\n| TestSocks\n| TestingBridgeBootstrapDownloadInitialDelay\n| TestingBridgeDownloadInitialDelay\n| TestingClientConsensusDownloadInitialDelay\n| TestingClientDownloadInitialDelay\n| TestingDirAuthVoteExitIsStrict\n| TestingDirAuthVoteGuardIsStrict\n| TestingDirAuthVoteHSDirIsStrict\n| TestingEnableCellStatsEvent\n| TestingEnableConnBwEvent\n| TestingServerConsensusDownloadInitialDelay\n| TestingServerDownloadInitialDelay\n| TestingTorNetwork\n| TrackHostExitsExpire\n| TruncateLogFile\n| UnixSocksGroupWritable\n| UpdateBridgesFromAuthority\n| UseBridges\n| UseDefaultFallbackDirs\n| UseEntryGuards\n| UseGuardFraction\n| UseMicrodescriptors\n| V3AuthNIntervalsValid\n| V3AuthUseLegacyKey\n| V3AuthoritativeDirectory\n| VanguardsLiteEnabled\n| VersioningAuthoritativeDirectory\n| __OwningControllerProcess\n\n# Units in use\n| AccountingMax\n| AuthDirFastGuarantee\n| AuthDirGuardBWGuarantee\n| AuthDirVoteGuardGuaranteeTimeKnown\n| AuthDirVoteStableGuaranteeMTBF\n| AuthDirVoteStableGuaranteeMinUptime\n| BandwidthBurst\n| BandwidthRate\n| ConstrainedSockSize\n| DoSCircuitCreationDefenseTimePeriod\n| DoSConnectionConnectDefenseTimePeriod\n| DormantClientTimeout\n| GuardLifetime\n| HeartbeatPeriod\n| KISTSchedRunInterval\n| MaxAdvertisedBandwidth\n| MaxConsensusAgeForDiffs\n| MaxMemInQueues\n| MaxOnionQueueDelay\n| MaxUnparseableDescSizeToLog\n| MinUptimeHidServDirectoryV2\n| PerConnBWBurst\n| PerConnBWRate\n| RelayBandwidthBurst\n| RelayBandwidthRate\n| RephistTrackTime\n| SSLKeyLifetime\n| SigningKeyLifetime\n| TestingAuthDirTimeToLearnReachability\n| TestingAuthKeyLifetime\n| TestingClientMaxIntervalWithoutRequest\n| TestingDirConnectionMaxStall\n| TestingLinkCertLifetime\n| TestingMinExitFlagThreshold\n| TestingMinFastFlagThreshold\n| TestingMinTimeToReportBandwidth\n| TestingSigningKeySlop\n| TestingV3AuthInitialDistDelay\n| TestingV3AuthInitialVoteDelay\n| TestingV3AuthInitialVotingInterval\n| TestingV3AuthVotingStartOffset\n| TokenBucketRefillInterval\n| V3AuthDistDelay\n| V3AuthVoteDelay\n| V3AuthVotingInterval\n\n# Ports lists\n| FirewallPorts\n| LongLivedPorts\n| RejectPlaintextPorts\n| WarnPlaintextPorts\n) \\G ","end":"(?!\\G)","patterns":[{"contentName":"meta.value.torrc","begin":"\\G(?=(?:\\s+(?:[^\"#\\s]+|\"(?:[^\\\\\"]|\\\\.)*+\"))++\\s*#)","end":"(?=\\s*#)","patterns":[{"include":"#entryNumeric"}]},{"contentName":"meta.value.torrc","begin":"\\G(?:\\s*(\\\\$\\r?\\n?)|[ \\t]+|(?=$|#))","end":"(\\G\\s+((?=\\S)(?!#)[^\\\\\\n#\\0]+))(?=\\s*(?:$|#))|(?=\\s*$)","patterns":[{"include":"#commentEmbedded"},{"include":"#esc"},{"include":"#entryNumeric"}],"beginCaptures":{"1":{"patterns":[{"include":"#esc"}]}},"endCaptures":{"1":{"name":"meta.value.torrc"},"2":{"patterns":[{"include":"#entryNumeric"}]}}}]},{"begin":"(?i)(?\u003c=[/+\\s]Log|^Log)\\G","end":"(?!\\G)","patterns":[{"contentName":"meta.value.torrc","begin":"\\G(?=(?:\\s+(?:[^\"#\\s]+|\"(?:[^\\\\\"]|\\\\.)*+\"))++\\s*#)","end":"(?=\\s*#)","patterns":[{"include":"#entryLogging"}]},{"contentName":"meta.value.torrc","begin":"\\G(?:\\s*(\\\\$\\r?\\n?)|[ \\t]+|(?=$|#))","end":"(\\G\\s+((?=\\S)(?!#)[^\\\\\\n#\\0]+))(?=\\s*(?:$|#))|(?=\\s*$)","patterns":[{"include":"#commentEmbedded"},{"include":"#esc"},{"include":"#entryLogging"}],"beginCaptures":{"1":{"patterns":[{"include":"#esc"}]}},"endCaptures":{"1":{"name":"meta.value.torrc"},"2":{"patterns":[{"include":"#entryLogging"}]}}}]},{"begin":"(?ix)\n(?\u003c= AccelDir\n| CacheDirectory\n| ClientOnionAuthDir\n| ControlPortWriteToFile\n| ControlSocket\n| CookieAuthFile\n| DataDirectory\n| DirPortFrontPage\n| ExtORPortCookieAuthFile\n| GeoIPFile\n| GeoIPv6File\n| GuardfractionFile\n| HiddenServiceDir\n| KeyDirectory\n| PidFile\n| ServerDNSResolvConfFile\n| V3BandwidthsFile\n) \\G","end":"(?!\\G)","patterns":[{"contentName":"meta.value.torrc","begin":"\\G(?=(?:\\s+(?:[^\"#\\s]+|\"(?:[^\\\\\"]|\\\\.)*+\"))++\\s*#)","end":"(?=\\s*#)","patterns":[{"include":"#entryFile"}]},{"contentName":"meta.value.torrc","begin":"\\G(?:\\s*(\\\\$\\r?\\n?)|[ \\t]+|(?=$|#))","end":"(\\G\\s+((?=\\S)(?!#)[^\\\\\\n#\\0]+))(?=\\s*(?:$|#))|(?=\\s*$)","patterns":[{"include":"#commentEmbedded"},{"include":"#esc"},{"include":"#entryFile"}],"beginCaptures":{"1":{"patterns":[{"include":"#esc"}]}},"endCaptures":{"1":{"name":"meta.value.torrc"},"2":{"patterns":[{"include":"#entryFile"}]}}}]},{"begin":"(?ix)\n(?\u003c= AuthDirVoteGuard\n| EntryNodes\n| ExcludeExitNodes\n| ExcludeNodes\n| ExitNodes\n| HSLayer2Nodes\n| HSLayer3Nodes\n| HTTPProxy\n| HTTPSProxy\n| HiddenServicePort\n| MapAddress\n| MiddleNodes\n| NodeFamily\n| OutboundBindAddressExit\n| OutboundBindAddressOR\n| OutboundBindAddressPT\n| OutboundBindAddress\n| Socks4Proxy | SOCKS4Proxy    # FIXME; Remove different casing once issue with\n| Socks5Proxy | SOCKS5Proxy    # scoped modifiers in lookbehinds is worked out.\n| TestingDirAuthVoteExit\n| TestingDirAuthVoteGuard\n| TestingDirAuthVoteHSDir\n| VirtualAddrNetworkIPv6\n) \\G","end":"(?!\\G)","patterns":[{"contentName":"meta.value.torrc","begin":"\\G(?=(?:\\s+(?:[^\"#\\s]+|\"(?:[^\\\\\"]|\\\\.)*+\"))++\\s*#)","end":"(?=\\s*#)","patterns":[{"include":"#entryNode"}]},{"contentName":"meta.value.torrc","begin":"\\G(?:\\s*(\\\\$\\r?\\n?)|[ \\t]+|(?=$|#))","end":"(\\G\\s+((?=\\S)(?!#)[^\\\\\\n#\\0]+))(?=\\s*(?:$|#))|(?=\\s*$)","patterns":[{"include":"#commentEmbedded"},{"include":"#esc"},{"include":"#entryNode"}],"beginCaptures":{"1":{"patterns":[{"include":"#esc"}]}},"endCaptures":{"1":{"name":"meta.value.torrc"},"2":{"patterns":[{"include":"#entryNode"}]}}}]},{"begin":"(?i)(?\u003c=DirPolicy|ExitPolicy|MetricsPortPolicy|SocksPolicy|SOCKSPolicy)\\G","end":"(?!\\G)","patterns":[{"contentName":"meta.value.torrc","begin":"\\G(?=(?:\\s+(?:[^\"#\\s]+|\"(?:[^\\\\\"]|\\\\.)*+\"))++\\s*#)","end":"(?=\\s*#)","patterns":[{"include":"#entryPolicies"}]},{"contentName":"meta.value.torrc","begin":"\\G(?:\\s*(\\\\$\\r?\\n?)|[ \\t]+|(?=$|#))","end":"(\\G\\s+((?=\\S)(?!#)[^\\\\\\n#\\0]+))(?=\\s*(?:$|#))|(?=\\s*$)","patterns":[{"include":"#commentEmbedded"},{"include":"#esc"},{"include":"#entryPolicies"}],"beginCaptures":{"1":{"patterns":[{"include":"#esc"}]}},"endCaptures":{"1":{"name":"meta.value.torrc"},"2":{"patterns":[{"include":"#entryPolicies"}]}}}]},{"begin":"(?i)(?\u003c=ConsensusParams|ServerTransportOptions)\\G","end":"(?!\\G)","patterns":[{"contentName":"meta.value.torrc","begin":"\\G(?=(?:\\s+(?:[^\"#\\s]+|\"(?:[^\\\\\"]|\\\\.)*+\"))++\\s*#)","end":"(?=\\s*#)","patterns":[{"include":"#entryParams"}]},{"contentName":"meta.value.torrc","begin":"\\G(?:\\s*(\\\\$\\r?\\n?)|[ \\t]+|(?=$|#))","end":"(\\G\\s+((?=\\S)(?!#)[^\\\\\\n#\\0]+))(?=\\s*(?:$|#))|(?=\\s*$)","patterns":[{"include":"#commentEmbedded"},{"include":"#esc"},{"include":"#entryParams"}],"beginCaptures":{"1":{"patterns":[{"include":"#esc"}]}},"endCaptures":{"1":{"name":"meta.value.torrc"},"2":{"patterns":[{"include":"#entryParams"}]}}}]},{"begin":"(?ix)\n(?\u003c= MinimalAcceptedServerVersion\n| RecommendedClientVersions\n| RecommendedServerVersions\n| RecommendedVersions\n) \\G","end":"(?!\\G)","patterns":[{"contentName":"meta.value.torrc","begin":"\\G(?=(?:\\s+(?:[^\"#\\s]+|\"(?:[^\\\\\"]|\\\\.)*+\"))++\\s*#)","end":"(?=\\s*#)","patterns":[{"include":"#entryVersions"}]},{"contentName":"meta.value.torrc","begin":"\\G(?:\\s*(\\\\$\\r?\\n?)|[ \\t]+|(?=$|#))","end":"(\\G\\s+((?=\\S)(?!#)[^\\\\\\n#\\0]+))(?=\\s*(?:$|#))|(?=\\s*$)","patterns":[{"include":"#commentEmbedded"},{"include":"#esc"},{"include":"#entryVersions"}],"beginCaptures":{"1":{"patterns":[{"include":"#esc"}]}},"endCaptures":{"1":{"name":"meta.value.torrc"},"2":{"patterns":[{"include":"#entryVersions"}]}}}]},{"begin":"\\G","end":"(?!\\G)","patterns":[{"contentName":"meta.value.torrc","begin":"\\G(?=(?:\\s+(?:[^\"#\\s]+|\"(?:[^\\\\\"]|\\\\.)*+\"))++\\s*#)","end":"(?=\\s*#)","patterns":[{"include":"#entryGeneric"}]},{"contentName":"meta.value.torrc","begin":"\\G(?:\\s*(\\\\$\\r?\\n?)|[ \\t]+|(?=$|#))","end":"(\\G\\s+((?=\\S)(?!#)[^\\\\\\n#\\0]+))(?=\\s*(?:$|#))|(?=\\s*$)","patterns":[{"include":"#commentEmbedded"},{"include":"#esc"},{"include":"#entryGeneric"}],"beginCaptures":{"1":{"patterns":[{"include":"#esc"}]}},"endCaptures":{"1":{"name":"meta.value.torrc"},"2":{"patterns":[{"include":"#entryGeneric"}]}}}]}],"beginCaptures":{"1":{"name":"keyword.operator.flag.clear-value.torrc"},"2":{"name":"keyword.operator.flag.append-value.torrc"},"3":{"name":"variable.assignment.entry.torrc"}}},"entryFile":{"name":"string.other.link.filename.torrc","begin":"(?=[^#\\s])","end":"(?=\\s*(?:$|#))"},"entryGeneric":{"patterns":[{"include":"#typed"},{"include":"#address"},{"include":"etc#ip"},{"include":"#num"},{"include":"#str"},{"include":"#portSuffix"},{"include":"etc#comma"},{"include":"#anyIP"},{"include":"#unq"}]},"entryLogging":{"patterns":[{"name":"meta.log-selector.torrc","match":"(?ix)\n((\\[)((?:~?(?:[a-z]+|\\*)(?:,|(?=\\])))*+)(\\]))?\n((?!-)(?:(?:debug|err|info|notice|warn)-?){1,2}(?\u003c!-))\n(?=$|\\s)","captures":{"1":{"name":"meta.domain-list.torrc"},"2":{"name":"punctuation.section.begin.domains.torrc"},"3":{"patterns":[{"name":"entity.name.domain.torrc","match":"[A-Za-z]+"},{"name":"keyword.operator.wildcard.match-all.torrc","match":"\\*"},{"name":"keyword.operator.logical.negation.negate.torrc","match":"~"},{"include":"etc#comma"}]},"4":{"name":"punctuation.section.end.domains.torrc"},"5":{"name":"meta.severity-levels.torrc","patterns":[{"name":"constant.language.severity-level.torrc","match":"(?i)debug|err|info|notice|warn"},{"name":"punctuation.separator.dash.torrc","match":"-"}]}}},{"name":"keyword.operator.log-destination.$1.torrc","match":"(?i)(?\u003c=\\s|^|\\G)\\b(stderr|stdout|syslog)\\b(?=$|\\s|#)"},{"name":"meta.log-file.torrc","contentName":"string.other.link.filename.torrc","begin":"(?i)(?\u003c=\\s|^|\\G)(file)(?=\\s|$|#)[ \\t]*","end":"(?=\\s*(?:$|#))","beginCaptures":{"1":{"name":"keyword.operator.log-destination.filename.torrc"}}}]},"entryNode":{"patterns":[{"include":"#cc"},{"include":"#port"},{"match":"(?i)(?\u003c=\\s|^|\\G|,)(unix)(:)((?:[^\\r\\n#\\s\\\\]|\\\\.)++)","captures":{"1":{"name":"storage.type.domain.unix.torrc"},"2":{"patterns":[{"include":"etc#kolon"}]},"3":{"name":"string.other.link.filename.torrc"}}},{"name":"keyword.operator.wildcard.match-all.torrc","match":"(?\u003c=\\s|^|\\G|,)\\*(?=\\s|,|$|#)"},{"include":"#address"},{"include":"etc#comma"},{"include":"etc#ipv6"},{"include":"source.hosts#modern"}]},"entryNumeric":{"patterns":[{"name":"constant.language.other.$1.torrc","match":"(?i)(?\u003c=\\s|^|\\G)\\b(auto|bridge|relay|v3)\\b(?=$|\\s|#)"},{"include":"etc#comma"},{"include":"#typed"},{"include":"#unit"},{"include":"#num"},{"name":"invalid.illegal.syntax.non-numeric.torrc","match":"(?:[^#\\s\\d,]|(?\u003c!\\d),(?!\\d))++"}]},"entryParams":{"patterns":[{"name":"meta.parameter.torrc","contentName":"meta.parameter-value.torrc","begin":"(?\u003c=\\s|^|\\G|,)([^\\s#=]+)(=)","end":"(?=$|\\s|,|#)","patterns":[{"include":"#typed"},{"name":"string.unquoted.torrc","match":"\\G[^\\s,#]+"}],"beginCaptures":{"1":{"name":"entity.name.parameter.torrc"},"2":{"patterns":[{"include":"etc#eql"}]}}},{"name":"constant.language.parameter.niladic.torrc","match":"(?\u003c=\\s|^|\\G|,)[^\\s#=,]+(?=$|\\s|,|#)"},{"include":"etc#comma"}]},"entryPolicies":{"patterns":[{"name":"meta.policy.${2:/downcase}.torrc","match":"(?i)(?\u003c=\\s|^|\\G|,)((accept|reject)6?)(?=$|\\s|#|,)","captures":{"1":{"name":"keyword.control.policy-action.torrc"}}},{"include":"etc#comma"},{"include":"#address"},{"include":"etc#ip"},{"include":"etc#colon"},{"include":"etc#globSimple"}]},"entryVersions":{"patterns":[{"include":"#version"},{"include":"etc#comma"}]},"esc":{"name":"constant.character.escape.newline.torrc","match":"((\\\\))$\\r?\\n?","captures":{"1":{"name":"punctuation.definition.escape.backslash.torrc"},"2":{"name":"sublimelinter.gutter-mark.torrc"}}},"include":{"name":"meta.preprocessor.include.torrc","begin":"(?i)^\\s*((%)include)(?=$|\\s|#)[ \\t]*","end":"(?=\\s*$)","patterns":[{"name":"string.quoted.double.include.filename.torrc","contentName":"constant.other.reference.link.include.torrc","begin":"\\G\"","end":"\"|(?=$)","patterns":[{"include":"#strEsc"},{"include":"etc#globSimple"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.torrc"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.torrc"}}},{"name":"string.unquoted.include.filename.torrc","begin":"\\G(?=[^\"\\s#\\\\])","end":"(?=\\s*(?:$|#))","patterns":[{"name":"constant.other.reference.link.include.torrc","match":"(?:[^\"\\r\\n#\\\\]|\\\\.)++","captures":{"0":{"patterns":[{"include":"etc#globSimple"}]}}},{"include":"#esc"}]}],"beginCaptures":{"1":{"name":"keyword.control.directive.include.torrc"},"2":{"name":"punctuation.definition.directive.torrc"}}},"main":{"patterns":[{"include":"#comment"},{"include":"#include"},{"include":"#entry"}]},"num":{"patterns":[{"name":"constant.numeric.integer.int.hexadecimal.hex.torrc","match":"(?i)(?:(?\u003c=\\s|^|\\G|,)[-+]|\\b)0x[A-F0-9]+\\b"},{"name":"constant.numeric.float.real.decimal.dec.torrc","match":"(?:(?\u003c=\\s|^|\\G|,)[-+]|\\b)\\d*\\.\\d+\\b"},{"name":"constant.numeric.integer.int.decimal.dec.torrc","match":"(?:(?\u003c=\\s|^|\\G|,)[-+]|\\b)\\d+(?!\\.)\\b"}]},"port":{"patterns":[{"include":"#portLone"},{"include":"#portSuffix"}]},"portLone":{"name":"constant.numeric.integer.port-number.torrc","match":"(?\u003c=\\s|^|\\G|,)\\d+(?=\\s|$|,|#)"},"portSuffix":{"match":"(?:(?\u003c=\\d:)|(?\u003c=\\d)(:))(\\d+)(?=\\s|$|,|#)","captures":{"1":{"patterns":[{"include":"etc#colon"}]},"2":{"name":"constant.numeric.integer.port-number.torrc"}}},"str":{"name":"string.quoted.double.torrc","begin":"\"","end":"(\")|((?:[^\\\\\"]|\\\\.)*)$","patterns":[{"include":"#strEsc"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.torrc"}},"endCaptures":{"1":{"name":"punctuation.definition.string.end.torrc"},"2":{"name":"invalid.illegal.syntax.unclosed-string.torrc"}}},"strEsc":{"patterns":[{"name":"constant.character.escape.simple.torrc","match":"(\\\\)[nrt\\\\'\"]"},{"name":"constant.character.escape.codepoint.hexadecimal.torrc","match":"(\\\\)x[A-Fa-f0-9]{2}"},{"name":"constant.character.escape.codepoint.octal.torrc","match":"(\\\\)([0-7]{1,3})"}]},"typed":{"patterns":[{"name":"meta.duration.torrc","match":"(?i)(?:^|\\G|(?\u003c=\\s))([-+]?(?:0[xX][A-F0-9]+|\\d+(?:\\.\\d+)?))\\s+((?:second|minute|hour|day|week)s?)(?=$|\\s|#)","captures":{"1":{"patterns":[{"include":"#num"}]},"2":{"patterns":[{"include":"#unit"}]}}},{"name":"meta.data-size.torrc","match":"(?i)(?:^|\\G|(?\u003c=\\s))([-+]?(?:0[xX][A-F0-9]+|\\d+(?:\\.\\d+)?))\\s+([KMGT]?(?:Bytes|Bits))(?=$|\\s|#)","captures":{"1":{"patterns":[{"include":"#num"}]},"2":{"patterns":[{"include":"#unit"}]}}}]},"unit":{"match":"(?i)(?\u003c=\\s|^|\\G)\\b(?:(([KMGT]?(?:Bit|Byte|B))s?)|((msec|second|minute|hour|day|week|month)s?))\\b(?=$|\\s|#)","captures":{"1":{"name":"constant.language.unit.data.${2:/downcase}.torrc"},"3":{"name":"constant.language.unit.temporal.${4:/downcase}.torrc"}}},"unq":{"name":"string.unquoted.torrc","begin":"[^\\s\\0#]","end":"(?=\\s*(?:\\\\?$|#))"},"version":{"name":"constant.other.version-string.torrc","match":"(?i)(?\u003c=\\s|^|\\G|,)(\\d+(?:\\.\\d+)*)(?:(-)(?!-)[-A-Z]+)?(?=$|,|\\s|#)","captures":{"1":{"patterns":[{"include":"etc#dot"}]},"2":{"patterns":[{"include":"etc#dash"}]}}}},"injections":{"L:source.torrc meta.entry.accountingstart.torrc":{"patterns":[{"match":"(?i)(?\u003c=AccountingStart)\\s+(day|week|month)(?:\\s+(\\d{1,2}))?\\s+((?:\\d{2}(:)\\d{2}))(?=\\s*(?:$|#))","captures":{"1":{"patterns":[{"include":"#unit"}]},"2":{"name":"constant.numeric.day-of-month.torrc"},"3":{"name":"constant.numeric.time.torrc"},"4":{"name":"punctuation.separator.time.torrc"}}}]},"L:source.torrc meta.entry.controlsocket.torrc":{"patterns":[{"match":"(?i)(?\u003c=ControlSocket)\\s+(0)(?=\\s*(?:$|#))","captures":{"1":{"name":"constant.numeric.disable-option.torrc"}}}]},"L:source.torrc meta.entry.schedulers.torrc":{"patterns":[{"match":"(?i)(?\u003c=Schedulers)\\s+(?!\\s*,\\s*)((?:\\s*(?:,\\s*)?(?:KISTLite|KIST|Vanilla))++)(?=\\s*(?:$|#))","captures":{"1":{"patterns":[{"name":"constant.language.scheduler-type.torrc","match":"\\w+"},{"include":"etc#comma"}]}}}]},"L:source.torrc source.embedded.abnf meta.ruleset":{"patterns":[{"name":"string.comment.freeform-rule-specifier.abnf","match":"(?\u003c==)\\s+(Any character except.+)"}]}}}
