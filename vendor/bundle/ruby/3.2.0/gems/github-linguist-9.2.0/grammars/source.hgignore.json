{"name":".hgignore","scopeName":"source.hgignore","patterns":[{"include":"#main"}],"repository":{"comment":{"name":"comment.line.number-sign.hgignore","begin":"(?\u003c=\\s|^)(#)","end":"$","beginCaptures":{"1":{"name":"punctuation.definition.comment.hgignore"}}},"common":{"patterns":[{"include":"#comment"},{"include":"#typed"},{"include":"#import"}]},"import":{"patterns":[{"name":"meta.import.pattern-list.hgignore","begin":"^\\s*(?:(!)\\s*)?((listfile0?)(:))","end":"(?=\\s*(?:$|#))","patterns":[{"include":"source.gitignore#patternInnards"}],"beginCaptures":{"1":{"patterns":[{"include":"#negate"}]},"2":{"name":"keyword.control.import.$3.hgignore"},"4":{"patterns":[{"include":"etc#colon"}]}}},{"name":"meta.import.hgignore-file.hgignore","begin":"^\\s*(?:(!)\\s*)?((include|subinclude)(:))","end":"(?=\\s*(?:$|#))","patterns":[{"include":"source.gitignore#patternInnards"}],"beginCaptures":{"1":{"patterns":[{"include":"#negate"}]},"2":{"name":"keyword.control.import.$3.hgignore"},"4":{"patterns":[{"include":"etc#colon"}]}}}]},"main":{"patterns":[{"include":"#syntaxRegexp"},{"include":"#syntax"},{"include":"#common"}]},"negate":{"name":"keyword.operator.logical.not.negation.hgignore","match":"!"},"regex":{"contentName":"string.regexp.hgignore","begin":"(?:\\G|^)\\s*(?=[^\\s#])","end":"(?=\\s*(?:$|#))","patterns":[{"include":"source.regexp"}]},"syntax":{"begin":"^\\s*(syntax(:))\\s*(regexp|glob|rootglob)(?=\\s*$)","end":"(?=^\\s*syntax:)","patterns":[{"include":"#syntaxRegexp"},{"include":"#syntaxGlob"}],"beginCaptures":{"1":{"name":"keyword.control.syntax.hgignore"},"2":{"name":"keyword.operator.assignment.hgignore"},"3":{"name":"constant.language.pattern-syntax.hgignore"}}},"syntaxGlob":{"name":"meta.scope.glob-syntax.hgignore","begin":"(?\u003c=glob)\\G","end":"(?=^\\s*syntax:)","patterns":[{"include":"#common"},{"match":"^\\s*(!)","captures":{"1":{"patterns":[{"include":"#negate"}]}}},{"include":"source.gitignore#patternInnards"}]},"syntaxRegexp":{"name":"meta.scope.regexp-syntax.hgignore","begin":"(?\u003c=regexp)\\G|\\A(?!\\s*syntax:)","end":"(?=^\\s*syntax:)","patterns":[{"include":"#common"},{"begin":"^\\s*(?:(!)\\s*)?(?=[^\\s#])","end":"(?=\\s*(?:$|#))","patterns":[{"include":"#regex"}],"beginCaptures":{"1":{"patterns":[{"include":"#negate"}]}}}]},"typed":{"patterns":[{"name":"meta.pattern.pathname.hgignore","begin":"^\\s*(?:(!)\\s*)?((path|filepath|rootfilesin)(:))","end":"(?=\\s*(?:$|#))","patterns":[{"include":"source.gitignore#patternInnards"}],"beginCaptures":{"1":{"patterns":[{"include":"#negate"}]},"2":{"name":"storage.type.class.syntax.$3.hgignore"},"4":{"patterns":[{"include":"etc#colon"}]}}},{"name":"meta.pattern.glob.hgignore","begin":"^\\s*(?:(!)\\s*)?((glob|rootglob)(:))","end":"(?=\\s*(?:$|#))","patterns":[{"include":"source.gitignore#patternInnards"}],"beginCaptures":{"1":{"patterns":[{"include":"#negate"}]},"2":{"name":"storage.type.class.syntax.$3.hgignore"},"4":{"patterns":[{"include":"etc#colon"}]}}},{"name":"meta.pattern.regexp.hgignore","begin":"^\\s*(?:(!)\\s*)?((re)(:))","end":"(?=\\s*(?:$|#))","patterns":[{"include":"#regex"}],"beginCaptures":{"1":{"patterns":[{"include":"#negate"}]},"2":{"name":"storage.type.class.syntax.$3.hgignore"},"4":{"patterns":[{"include":"etc#colon"}]}}}]}}}
