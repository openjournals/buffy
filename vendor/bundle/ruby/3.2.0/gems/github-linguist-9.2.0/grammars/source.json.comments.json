{"name":"JSON with Comments","scopeName":"source.json.comments","patterns":[{"include":"#value"}],"repository":{"array":{"name":"meta.structure.array.json.comments","begin":"\\[","end":"\\]","patterns":[{"include":"#value"},{"name":"punctuation.separator.array.json.comments","match":","},{"name":"invalid.illegal.expected-array-separator.json.comments","match":"[^\\s\\]]"}],"beginCaptures":{"0":{"name":"punctuation.definition.array.begin.json.comments"}},"endCaptures":{"0":{"name":"punctuation.definition.array.end.json.comments"}}},"comments":{"patterns":[{"name":"comment.block.documentation.json.comments","begin":"/\\*\\*(?!/)","end":"\\*/","captures":{"0":{"name":"punctuation.definition.comment.json.comments"}}},{"name":"comment.block.json.comments","begin":"/\\*","end":"\\*/","captures":{"0":{"name":"punctuation.definition.comment.json.comments"}}},{"name":"comment.line.double-slash.js","match":"(//).*$\\n?","captures":{"1":{"name":"punctuation.definition.comment.json.comments"}}}]},"constant":{"name":"constant.language.json.comments","match":"\\b(?:true|false|null)\\b"},"number":{"name":"constant.numeric.json.comments","match":"(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional"},"object":{"name":"meta.structure.dictionary.json.comments","begin":"\\{","end":"\\}","patterns":[{"include":"#objectkey"},{"include":"#comments"},{"name":"meta.structure.dictionary.value.json.comments","begin":":","end":"(,)|(?=\\})","patterns":[{"include":"#value"},{"name":"invalid.illegal.expected-dictionary-separator.json.comments","match":"[^\\s,]"}],"beginCaptures":{"0":{"name":"punctuation.separator.dictionary.key-value.json.comments"}},"endCaptures":{"1":{"name":"punctuation.separator.dictionary.pair.json.comments"}}},{"name":"invalid.illegal.expected-dictionary-separator.json.comments","match":"[^\\s\\}]"}],"beginCaptures":{"0":{"name":"punctuation.definition.dictionary.begin.json.comments"}},"endCaptures":{"0":{"name":"punctuation.definition.dictionary.end.json.comments"}}},"objectkey":{"name":"string.json.comments entity.name.tag.property-name.json.comments","begin":"\"","end":"\"","patterns":[{"include":"#stringcontent"}],"beginCaptures":{"0":{"name":"punctuation.entity.name.tag.property-name.begin.json.comments"}},"endCaptures":{"0":{"name":"punctuation.entity.name.tag.property-name.end.json.comments"}}},"string":{"name":"string.quoted.double.json.comments","begin":"\"","end":"\"","patterns":[{"include":"#stringcontent"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.json.comments"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.json.comments"}}},"stringcontent":{"patterns":[{"name":"constant.character.escape.json.comments","match":"(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits"},{"name":"invalid.illegal.unrecognized-string-escape.json.comments","match":"\\\\."}]},"value":{"patterns":[{"include":"#constant"},{"include":"#number"},{"include":"#string"},{"include":"#array"},{"include":"#object"},{"include":"#comments"}]}}}
