{"name":"daslang","scopeName":"source.daslang","patterns":[{"include":"#comments"},{"include":"#annotations"},{"include":"#struct_declaration"},{"include":"#function"},{"include":"#variable_declaration"},{"include":"#keywords"},{"include":"#strings"},{"include":"#literals"},{"include":"#builtin_types"},{"include":"#builtin_functions_call"},{"include":"#function_call"},{"include":"#member_access"},{"include":"#operators"},{"include":"#identifiers"}],"repository":{"annotations":{"patterns":[{"name":"meta.declaration.annotation.daslang","begin":"((?\u003c!\\[)\\[(?!\\[))\\s*([[:alpha:]_][[:alnum:]_]+)\\s*(\\()?","end":"(\\))?(\\])","patterns":[{"match":"\\b([[:alpha:]_][[:alnum:]_]*)\\b\\s*=","captures":{"0":{"name":"keyword.operator.assignment.daslang"},"1":{"name":"constant.other.annotation-key.daslang"}}},{"include":"#strings"},{"include":"#literals"},{"name":"punctuation.separator.arguments.daslang","match":","}],"beginCaptures":{"1":{"name":"punctuation.definition.annotation.begin.bracket.square.daslang"},"2":{"name":"storage.type.annotation.daslang"},"3":{"name":"punctuation.definition.annotation-arguments.begin.bracket.round.daslang"}},"endCaptures":{"1":{"name":"punctuation.definition.annotation-arguments.end.bracket.round.daslang"},"2":{"name":"punctuation.definition.annotation.end.bracket.square.daslang"}}}]},"blocks":{"patterns":[{"name":"meta.block.curly.daslang","begin":"\\{","end":"\\}","patterns":[{"include":"$self"},{"name":"punctuation.terminator.statement.daslang","match":";"}],"beginCaptures":{"0":{"name":"punctuation.definition.block.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.block.end.daslang"}}}]},"builtin_functions_call":{"name":"meta.function-call.builtin.daslang","begin":"\\b(print|terminate|stackwalk|breakpoint|assert|verify|static_assert|concept_assert|debug|memzero|invoke|push|push_clone|emplace|reserve|resize|erase|length|clear|capacity|key_exists|get|find|find_index|find_index_if|empty|keys|values|to_table_move|to_array_move|subarray)\\b\\s*(?=\\()","end":"\\)","patterns":[{"contentName":"meta.function.arguments.daslang","begin":"\\(","end":"(?=\\))","patterns":[{"include":"#function_arguments"}],"beginCaptures":{"0":{"name":"punctuation.definition.arguments.begin.daslang"}}}],"beginCaptures":{"1":{"name":"support.function.builtin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.arguments.end.daslang"}}},"builtin_types":{"name":"support.type.builtin.daslang","match":"\\b(bool|void|string|das_string|auto|int|int2|int3|int4|uint|bitfield|uint2|uint3|uint4|float|float2|float3|float4|range|urange|block|int64|uint64|double|function|lambda|int8|uint8|int16|uint16|tuple|variant|iterator|generator|yield|fixed_array|table|array|option|Type)\\b"},"comments":{"patterns":[{"name":"comment.line.double-slash.daslang","begin":"//","end":"(?=\\n)","patterns":[{"name":"constant.character.escape.line-continuation.daslang","match":"\\\\(?=\\n)"}]},{"name":"comment.block.daslang","begin":"/\\*","end":"\\*/"}]},"expression":{"patterns":[{"include":"#strings"},{"include":"#literals"},{"include":"#builtin_functions_call"},{"include":"#function_call"},{"include":"#member_access"},{"include":"#operators"},{"include":"#variable_access"},{"include":"#initializers"},{"include":"#blocks"},{"name":"variable.other.daslang","match":"\\b([[:alpha:]_][[:alnum:]_:]*)\\b"}]},"function":{"patterns":[{"name":"meta.function.declaration.daslang","begin":"\\b(def)\\b\\s*((?:private|public|abstract|override|static)\\s+)?([[:alpha:]_][[:alnum:]_:]*)\\s*(\\()","end":"(\\{|\\n(?![[:space:]]))","patterns":[{"begin":"(?=\\))","end":"(?=\\s*[:\\{]|\\s*=\u003e|\\s*\\n(?![[:space:]]))","patterns":[{"name":"meta.function.parameters.daslang","begin":"\\(","end":"\\)","patterns":[{"begin":"\\b(var|let)\\b","end":"(?=,|;|\\))","patterns":[{"name":"variable.parameter.function.daslang","match":"\\b([[:alpha:]_][[:alnum:]_]*)\\b"},{"name":"punctuation.separator.annotation.daslang","match":":"},{"include":"#builtin_types"},{"include":"#user_defined_types"},{"include":"#expression"}],"beginCaptures":{"0":{"name":"storage.modifier.daslang"}}},{"name":"variable.parameter.function.daslang","match":"\\b([[:alpha:]_][[:alnum:]_]*)\\b"},{"name":"punctuation.separator.annotation.daslang","match":":"},{"include":"#builtin_types"},{"include":"#user_defined_types"},{"include":"#expression"},{"name":"punctuation.separator.parameters.daslang","match":",|;"}],"beginCaptures":{"0":{"name":"punctuation.definition.parameters.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.parameters.end.daslang"}}},{"name":"punctuation.separator.return-type.daslang","match":":"},{"include":"#builtin_types"},{"include":"#user_defined_types"}]},{"include":"#annotations"}],"beginCaptures":{"1":{"name":"storage.type.function.daslang"},"2":{"name":"storage.modifier.daslang"},"3":{"name":"entity.name.function.daslang"},"4":{"name":"punctuation.definition.parameters.begin.daslang"}},"endCaptures":{"1":{"name":"punctuation.definition.block.begin.daslang"}}},{"name":"meta.block.curly.daslang","begin":"\\{","end":"\\}","patterns":[{"include":"$self"},{"name":"punctuation.terminator.statement.daslang","match":";"}],"beginCaptures":{"0":{"name":"punctuation.definition.block.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.block.end.daslang"}}},{"name":"meta.block.pythonic.daslang","begin":"\\n(?=\\s)","end":"(?=\\n[^\\s])|\\s*$","patterns":[{"include":"$self"}]},{"name":"meta.lambda-expression.daslang","begin":"@","end":"(?=;|$)","patterns":[{"begin":"\u003c\\|","end":"(?=\\n|\\s*$)","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"include":"#function_arguments"}],"beginCaptures":{"0":{"name":"punctuation.definition.parameters.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.parameters.end.daslang"}}},{"begin":"(?=\\{|=\u003e|\\n)","end":"(?=\\n[^\\s])|\\s*$","patterns":[{"include":"#expression"},{"include":"#blocks"}]}],"beginCaptures":{"0":{"name":"keyword.operator.pipe.daslang"}}}],"beginCaptures":{"0":{"name":"keyword.operator.lambda-decl.daslang"}}},{"name":"meta.reader-macro.daslang","begin":"%([[:alpha:]_][[:alnum:]_]*)~","end":"([[:alpha:]_][[:alnum:]_]*)%","patterns":[{"include":"$self"}],"beginCaptures":{"0":{"name":"keyword.operator.reader-macro.daslang"},"1":{"name":"entity.name.function.reader-macro.daslang"}},"endCaptures":{"0":{"name":"keyword.operator.reader-macro-terminator.daslang"},"1":{"name":"entity.name.function.reader-macro.daslang"}}},{"name":"meta.block-expression.daslang","begin":"\\$","end":"(?=;|$)","patterns":[{"begin":"\u003c\\|","end":"(?=\\n|\\s*$)","patterns":[{"begin":"\\(","end":"\\)","patterns":[{"include":"#function_arguments"}],"beginCaptures":{"0":{"name":"punctuation.definition.parameters.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.parameters.end.daslang"}}},{"begin":"(?=\\{|=\u003e|\\n)","end":"(?=\\n[^\\s])|\\s*$","patterns":[{"include":"#expression"},{"include":"#blocks"}]}],"beginCaptures":{"0":{"name":"keyword.operator.pipe.daslang"}}}],"beginCaptures":{"0":{"name":"keyword.operator.block-decl.daslang"}}}]},"function_arguments":{"patterns":[{"name":"variable.parameter.function.daslang","match":"\\b([[:alpha:]_][[:alnum:]_]*)\\b(?=\\s*=)"},{"include":"#expression"},{"name":"punctuation.separator.arguments.daslang","match":",|;"}]},"function_call":{"name":"meta.function-call.daslang","begin":"(?\u003c!\\.)\\b([[:alpha:]_][[:alnum:]_\\:]*)\\b\\s*(?=\\()|(?\u003c=\\)|\\])\\s*(\\()","end":"\\)","patterns":[{"contentName":"meta.function.arguments.daslang","begin":"\\(","end":"(?=\\))","patterns":[{"include":"#function_arguments"}],"beginCaptures":{"0":{"name":"punctuation.definition.arguments.begin.daslang"}}}],"beginCaptures":{"1":{"name":"entity.name.function.daslang"},"2":{"name":"punctuation.definition.arguments.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.arguments.end.daslang"}}},"identifiers":{"patterns":[{"name":"variable.other.daslang","match":"\\b([_A-Za-z][A-Za-z0-9_]*)\\b"}]},"initializers":{"patterns":[{"name":"meta.initializer.array.fixed.daslang","begin":"\\[\\[","end":"\\]\\]","patterns":[{"include":"#initializers_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.array.begin.double-bracket.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.array.end.double-bracket.daslang"}}},{"name":"meta.initializer.array.dynamic.daslang","begin":"\\[\\{","end":"\\}\\]","patterns":[{"include":"#initializers_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.array.begin.bracket-curly.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.array.end.bracket-curly.daslang"}}},{"name":"meta.initializer.table.daslang","begin":"\\{\\{","end":"\\}\\}","patterns":[{"include":"#initializers_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.table.begin.double-curly.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.table.end.double-curly.daslang"}}}]},"initializers_content":{"patterns":[{"include":"#builtin_types"},{"include":"#user_defined_types"},{"include":"#operators"},{"include":"#strings"},{"include":"#literals"},{"include":"#expression"},{"match":"\\b([[:alpha:]_][[:alnum:]_]*)\\b\\s*=","captures":{"0":{"name":"keyword.operator.assignment.daslang"},"1":{"name":"variable.other.field.daslang"}}},{"name":"punctuation.separator.statement.daslang","match":";"},{"name":"punctuation.separator.element.daslang","match":","},{"name":"keyword.operator.ellipsis.daslang","match":"\\.\\.\\."},{"name":"keyword.operator.map.daslang","match":"\\s*=\u003e\\s*"},{"name":"keyword.control.comprehension.daslang","match":"\\b(where|for|in)\\b"},{"name":"keyword.operator.or.daslang","match":"\\|\\|"},{"name":"storage.type.declaration.daslang","match":"\\b(struct|class|tuple|variant|enum|bitfield)\\b"},{"include":"#variable_declaration"},{"name":"keyword.other.type-query.daslang","match":"\\b(typeinfo|type|auto)\\b"}]},"keywords":{"patterns":[{"name":"keyword.control.daslang","match":"\\b(if|else|elif|while|for|break|continue|return|yield|try|recover|panic|finally|in|is|as)\\b"},{"name":"keyword.control.operator-overload.daslang","match":"\\b(operator)\\b"},{"name":"storage.type.declaration.daslang","match":"\\b(struct|class|enum|variant|tuple|bitfield|typedef|def)\\b"},{"name":"storage.modifier.daslang","match":"\\b(let|var|static|public|private|shared|inscope|explicit|implicit|abstract|override|sealed|const)\\b"},{"name":"keyword.other.daslang","match":"\\b(new|typeinfo|type|addr|deref|reinterpret|assume|with|cast|pass|goto|label|aka)\\b"},{"name":"keyword.control.options.daslang","match":"\\b(options)\\b"},{"name":"keyword.control.module.daslang","match":"\\b(require)\\b"},{"name":"keyword.declaration.module.daslang","match":"\\b(module)\\b"},{"name":"keyword.control.pattern-matching.daslang","match":"\\b(match|match_expr|static_match|multi_match|match_type)\\b"}]},"literals":{"patterns":[{"name":"constant.language.daslang","match":"\\b(true|false|null)\\b"},{"name":"constant.character.daslang","match":"'[[:print:]]'"},{"name":"constant.numeric.integer.hexadecimal.unsigned.daslang","match":"\\b0x[\\dA-Fa-f]+u\\b"},{"name":"constant.numeric.integer.hexadecimal.long.daslang","match":"\\b0x[\\dA-Fa-f]+L\\b"},{"name":"constant.numeric.integer.hexadecimal.daslang","match":"\\b0x[\\dA-Fa-f]+\\b"},{"name":"constant.numeric.integer.octal.unsigned.daslang","match":"\\b0[0-7]+u\\b"},{"name":"constant.numeric.integer.octal.long.daslang","match":"\\b0[0-7]+L\\b"},{"name":"constant.numeric.integer.octal.daslang","match":"\\b0[0-7]+\\b"},{"name":"constant.numeric.integer.decimal.unsigned.daslang","match":"\\b\\d+u\\b"},{"name":"constant.numeric.integer.decimal.long.daslang","match":"\\b\\d+L\\b"},{"name":"constant.numeric.float.double.daslang","match":"\\b\\d+\\.\\d*([eE][\\+\\-]?\\d+)?d\\b"},{"name":"constant.numeric.float.double.daslang","match":"\\b\\d+([eE][\\+\\-]?\\d+)?d\\b"},{"name":"constant.numeric.float.double.daslang","match":"\\b\\.\\d+([eE][\\+\\-]?\\d+)?d\\b"},{"name":"constant.numeric.float.daslang","match":"\\b\\d+\\.\\d*([eE][\\+\\-]?\\d+)?f\\b"},{"name":"constant.numeric.float.daslang","match":"\\b\\d+([eE][\\+\\-]?\\d+)?f\\b"},{"name":"constant.numeric.float.daslang","match":"\\b\\.\\d+([eE][\\+\\-]?\\d+)?f\\b"},{"name":"constant.numeric.float.daslang","match":"\\b\\d+\\.\\d*([eE][\\+\\-]?\\d+)?\\b"},{"name":"constant.numeric.integer.decimal.daslang","match":"\\b\\d+\\b"}]},"member_access":{"patterns":[{"name":"punctuation.separator.member.daslang","match":"\\.(?=[[:alpha:]_])"},{"name":"punctuation.separator.safe-member.daslang","match":"\\?\\.(?=[[:alpha:]_])"},{"name":"punctuation.separator.direct-member.daslang","match":"\\.\\.(?=[[:alpha:]_])"},{"name":"punctuation.separator.pointer-member.daslang","match":"-\u003e"},{"name":"punctuation.separator.scope.daslang","match":"::"}]},"operators":{"patterns":[{"name":"keyword.operator.arithmetic.increment-decrement.daslang","match":"(\\+\\+|\\-\\-)"},{"name":"keyword.operator.arithmetic.daslang","match":"(\\+|-|\\*|/|%)"},{"name":"keyword.operator.logical.daslang","match":"(\u0026\u0026|\\|\\||\\^\\^|!)"},{"name":"keyword.operator.bitwise.daslang","match":"(\u0026|\\||\\^|~|\u003c\u003c|\u003e\u003e|\u003c\u003c\u003c|\u003e\u003e\u003e)"},{"name":"keyword.operator.comparison.daslang","match":"(==|!=|\u003c|\u003c=|\u003e|\u003e=)"},{"name":"keyword.operator.assignment.daslang","match":"(=|:=|\u003c-|\\+=|\\-=|\\*=|/=|%=|\u0026=|\\|=|^=|\u003c\u003c=|\u003e\u003e=|\u003c\u003c\u003c=|\u003e\u003e\u003e=|\u0026\u0026=|\\|\\|=|\\^\\^=)"},{"name":"keyword.operator.range.daslang","match":"(\\.\\.)"},{"name":"keyword.operator.null-coalescing.daslang","match":"(\\?\\?)"},{"name":"keyword.operator.conditional.daslang","match":"(\\?:)"},{"name":"keyword.operator.pipe.daslang","match":"(\u003c\\||\\|\u003e)"},{"name":"keyword.operator.lambda-decl.daslang","match":"@\\s*\u003c\\|"},{"name":"keyword.operator.block-decl.daslang","match":"\\$"},{"name":"keyword.operator.reader-macro.daslang","match":"%"},{"name":"keyword.operator.assignment.daslang","match":"="},{"name":"keyword.operator.lambda-expression.daslang","match":"\\s*=\u003e\\s*"}]},"strings":{"patterns":[{"name":"string.quoted.double.daslang","begin":"\"","end":"\"","patterns":[{"name":"constant.character.escape.daslang","match":"\\\\."},{"begin":"\\{","end":"\\}","patterns":[{"include":"$self"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.interpolation.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.string.interpolation.end.daslang"}}}]},{"name":"string.quoted.verbatim.daslang","begin":"@\"","end":"\"","patterns":[{"name":"constant.character.escape.daslang","match":"\\\\."}]}]},"struct_declaration":{"patterns":[{"name":"meta.struct.declaration.daslang","begin":"\\b(struct|class)\\b\\s*((?:private|public|sealed)\\s+)?([[:alpha:]_][[:alnum:]_]*)(?:\\s*:\\s*([[:alpha:]_][[:alnum:]_:]*))?\\s*(\\{)?","end":"\\}","patterns":[{"include":"#variable_declaration"},{"include":"#function"},{"include":"#comments"},{"include":"#annotations"},{"name":"punctuation.terminator.statement.daslang","match":";"}],"beginCaptures":{"1":{"name":"storage.type.class.daslang"},"2":{"name":"storage.modifier.daslang"},"3":{"name":"entity.name.type.class.daslang"},"4":{"name":"entity.other.inherited-class.daslang"},"5":{"name":"punctuation.definition.block.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.block.end.daslang"}}}]},"user_defined_types":{"name":"entity.name.type.daslang","match":"\\b([[:alpha:]_][[:alnum:]_:]*)\\b"},"variable_access":{"patterns":[{"name":"variable.other.daslang","match":"\\b([[:alpha:]_][[:alnum:]_:]*)\\b"},{"begin":"\\[","end":"\\]","patterns":[{"include":"#expression"}],"beginCaptures":{"0":{"name":"punctuation.definition.array.begin.daslang"}},"endCaptures":{"0":{"name":"punctuation.definition.array.end.daslang"}}}]},"variable_declaration":{"patterns":[{"name":"meta.variable.declaration.daslang","begin":"\\b(let|var)\\b\\s*((?:private|public|shared|inscope)\\s+)?([[:alpha:]_][[:alnum:]_]*)(?=\\s*[:=\u003c-]|\\s*\\[\\[|\\s*\\[\\{|\\s*\\{\\{|\\s*\\n(?![[:space:]]))","end":"(?=;|$)","patterns":[{"name":"punctuation.separator.type-annotation.daslang","match":":"},{"include":"#builtin_types"},{"include":"#user_defined_types"},{"include":"#initializers"},{"include":"#expression"},{"include":"#blocks"}],"beginCaptures":{"1":{"name":"storage.type.daslang"},"2":{"name":"storage.modifier.daslang"},"3":{"name":"entity.name.variable.daslang"}}}]}}}
